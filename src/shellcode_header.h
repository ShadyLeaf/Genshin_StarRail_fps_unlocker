#ifndef __SHELLCODE_H__
#define __SHELLCODE_H__

#include <stdint.h>

//simple encrypt to avoid antivirus detection
const DECLSPEC_ALIGN(32) uint64_t _PE_MEM_LOADER[] = {
0xC031480B75C98548, 0xCCCCCCCCCCCCCCC3, 0x000001E8358D48F8, 0xB848C9314DC0314D,
0x48CB1082F74BB815, 0x16F7063148068748, 0xF84817F7047E8D48, 0x0000000000841F0F,
0x0604874A08408D4D, 0xF88149900604314A, 0x8749EA7600001270, 0x00000000801F0FCF,
0xF5E5894828EC8348, 0x00468B4820EC8348, 0x0845314800453148, 0xEA043320380CB849,
0xB9490045314C3A8E, 0xD95DAD4816382521, 0xBF8D48F9084D314C, 0x5848606A000002FC,
0x18408B4D008B4C65, 0x00408B4D20408B4D, 0x20488B4900408B4D, 0x8548D7FF00558D48,
0xFF40BE8D481D74C0, 0xC8478948F548FFFF, 0x48F9894C48C48348, 0xCCCCCCCCCCCCE7FF,
0x48C48348FFC88348, 0xCCCCCCCCCCCCCCC3, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0x0000000000000000, 0x0000000000000000, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0x68EC834856405340, 0x00000030B8CB8948, 0x4401482024448948, 0x3120244C8D482024,
0x35E82824448D4CD2, 0x7275C08548000009, 0x0589482824448B48, 0xE8D98948FFFFFF84,
0x65C689480000007C, 0x0000006025148B4C, 0x617574726956B848, 0x8B4D18528B4D466C,
0x8B4D00528B4D2052, 0x8948204A8B490052, 0x72382444C7302444, 0x3024548D48006565,
0x85480000033AE848, 0x28244C8B481474C0, 0xB841D23148D1F748, 0x4890D0FF00008000,
0x5B5E68C48348F089, 0xCCCCCCCCCCCCCCC3, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xFFD86C355FF510AA, 0xFF5E088D638C73E6, 0x99A783C59A8F3FE6, 0x5EEF8CB19EC806A7,
0x9A6CC44E6137F867, 0xDDE7818D3E68B92F, 0x22187E72FFAFF17F, 0x2716960ADBDB7837,
0xE793DEFA50937837, 0x6CDB23BCDDDB6942, 0x2D93E73F95A34D36, 0x65C7A0B4D0601269,
0x2DAF84E85928C5E2, 0x61EFA08CD0640B69, 0x61E9A764E84067E0, 0x52ACB30B5F4F22E0,
0xE5A3F2139ACC6B04, 0x8298B77575CF26D8, 0xE4FED11313F055DE, 0xC5F9D11E13744AD1,
0x8479DD935BB7FDDE, 0x9C0D1D164B7AB955, 0x5C865902862E3214, 0x8B85110E4B62B955,
0x8B8514B6A3ACBA1D, 0x8DDA2FF7C56F457B, 0xD2F162294E238B09, 0xD245C5100B48FF39,
0x62CA4E55693CFF39, 0x5B8F8056253CFF39, 0xDE8BC1DD646F8B18, 0x9383295E2C24FFD8,
0x5306C18F642CBE55, 0x5319CE5FEF688E21, 0x35DB7950FFDF8160, 0x74CA0C5AC3D369A1,
0x74CA03A52152602A, 0x75D602E93756ED62, 0x743C81A035966E2B, 0x777085E1BED7B85E,
0xFE3828949FEEFD96, 0xCE1C5C1DD39ED9FA, 0xC11C5C1D4739E0BF, 0x7697191D47399F3B,
0x33611A5147399FAB, 0x337E153E3335F992, 0xDBB016763F7B72D3, 0x93589D3E3F7B7117,
0x8326167F5E0FB192, 0x43A3E87C16093AD3, 0xCEEBEE709D417AA7, 0xFC9F27F5D5D17CBB,
0xB498CC2462DE79C2, 0x3FD01D272ADC2F4F, 0xBA981D272B96C782, 0xF2981D27C112C842,
0x71D01AAE891A0BC1, 0xB85552A502520306, 0x81104663811BCD73, 0xE62B0305156EC115,
0xAED4320EFE01B213, 0xAED432C617FC7D90, 0x2ED8BF8ED34B72D1, 0x2ED8BF8E1E5FFF99,
0x67274071E19E38D1, 0xEC63643B6ADAEDD2, 0x67227BC2AB9BE590, 0x47C2F8C04A18A451,
0xB0E2384348D92710, 0xE269184348D90352, 0xA6E4508B0DD6475E, 0xE26D185D0E9E277A,
0x846D185E8776075E, 0x820A231BE1B2F81F, 0x820AF39C6AF3666D, 0xDE81BBB01E33E36D,
0x96A3CF6B9B7BFB5D, 0x06B9BBAB1E33F8D6, 0x8BF8752056F3CB93, 0x83BBFE68860CCAC3,
0xF67B7B208E57478B, 0x82BBFE08C9DC066C, 0xCA7DFD4009EF434D, 0x1A82FC1084AE8DC6,
0xF14477588ADA4D43, 0x0EBB88A44A1D055C, 0xF5740BECB52C13B7, 0x1D8BC26FFDFA98FF,
0xE5028AFFFDFA9B93, 0x9189C68FD99610DB, 0xDDE1E2D352DE20FF, 0xF98D699F12FA4474,
0x7AC511BB66710C4C, 0xB609D2E439304488, 0x7AC51E28F5FC8844, 0xB609D2E439304488,
0xE15F87C41D6CCDC0, 0xE1B3068C4A2D9981, 0x6AFFEC07022D9983, 0x6B926808CBA8D14A,
0x0F1667DA4EE0D14A, 0x0F163D97F6E0D14B, 0x0F176B12F9E1E82D, 0x5F1F5793C5A0632D,
0x5F1E1116CAA06368, 0x5F1E991E6E2B2768, 0x5E2B1D118AAE6268, 0x5EA7159501EA6268,
0xA19434A18CA06268, 0xA19435D1A824EB2C, 0x20DCCA2E57DB546D, 0x0BC6BD2E5724AB97,
0x0F45B23A391FBBF9, 0x0C0DAE7CB21FBBF8, 0x0C0D15951A0B3039, 0xDE88508D4C807439,
0x57C4508D4C1CF036, 0xDC80508D4D64D49A, 0x35831DAD23EF9045, 0xBCCF61D522051304,
0xDAA961D5238537B0, 0xFBAE61D8230128BF, 0x2A6BEA94391DA5FC, 0x2922EA097596E407,
0x4F448C6FB4BDA8CE, 0x6E438C62B439B7C1, 0x7FF5836AB08FB880, 0x7B8143EEB1C635C8,
0x7DF281D45DB2F7F2, 0x7B84963FA2E17AB6, 0x350F99D4A3BAF7F2, 0xFC0CD0D5F937B2D6,
0x2637958CC580BD92, 0x27B7B1384ECC1BEC, 0x26C795BCC5881BEC, 0x27BFB1104EC41BEC,
0x60CCA56E75801BEC, 0xEB8D646D3C9C5D67, 0xDCF9B6E8B488D6A8, 0xDCF9666ABB5CEDE9,
0xD3295D4ABFD1AEE9, 0x11A2194ABFD16A6A, 0x1EE3C1C1F6106927, 0x8E85D0B536946991,
0x8FC666BA12E047AD, 0xBC37137A9623B8E5, 0xBC355B5E0AA8F025, 0xBC35595ECE29B825,
0x7F6807019268E764, 0xFE20D72ADBBB6C2C, 0xB6F8A42ADBBA4CD6, 0x26EED0F85EF28B5D,
0x522754F85244841C, 0x92D81CD856080C10, 0xDE55543324CA3758, 0x3675504FAC8A177C,
0x7EB5DB03AC8A1720, 0x5DB4A0830FFED7A5, 0xEBBB8DF60EAD5AED, 0x393F8F358DE558BE,
0x62B2C7E5CF6846CA, 0xA00CC8F6B8617ACB, 0xDF81DB40B7DE4646, 0x3DF409C4CFE2CBAE,
0xD5B8C14F8635A8E6, 0x2A47A1A679CA5532, 0x7CAE60A53008DECD, 0xB062AC69FCF72132,
0x7CAE5396053504CD, 0xB0629F5AC9F9C801, 0xE4EBD742EDBD414D, 0x6FA3EFAE6EF55169,
0x2B64A751910CCA6C, 0xDC2DA751910C8248, 0x953ED35191037D88, 0x14772CAE61039D09,
0x50FE60AE61139DC9, 0x74BAA77E965BCDED, 0x3837EB7E965BC9C5, 0x0837CB5AD29C99E1,
0x5CBA839AE1D999E1, 0x44EA7C9A6A91D1C5, 0xC7A2BCA96DE81140, 0x8F86F822252B2984,
0x434A34E11DEFAACC, 0x8F86F82DD1236600, 0x6305B035F567EF4C, 0x9CFA4915F0ECA704,
0x6CFAAB94B8352C48, 0x6CFA9BB0FCF2D3B7, 0x24C2BFE475BAD3B7, 0x681248AC459E9F3A,
0x4C46C5E425BADBB7, 0x68024EAC3531978F, 0xA04741E4F5B4DFFF, 0x6BCC08C4D1F856B7,
0x23088B8CE9AAA9F6, 0xEFC4474025666535, 0x03470F500132EC7D, 0xFCB8F79004B9A445,
0xFCB8F7B020FD630D, 0xD8FC7AFCF00A2B0D, 0x90FC7A7CF0B36A2D, 0x6FFCF134B8973EA0,
0xA33FC9F03BDF1EF0, 0x6FF3053CF713D23C, 0xA33FC9F03BDF1EF0, 0x6FF3053CF713D23C,
0x18FCFDBFBED25974, 0x39FBFDB23ECD5663, 0xCB70B54BB5850034, 0x082FEBEF464D8B7D,
0x07DCF19866B50834, 0x05889E972446025B, 0x0ACA6D9E5B49F1AB, 0xC606A15DAB48A5D4,
0x8ACC9A15A944289A, 0x08C3532EE08D6E95, 0x0AAC5CDDE08D6E59, 0x435C5EB18F822CAA,
0xC5535EB18F02D42B, 0x8C9AD5FD8F02D4BB, 0xC58A3C7EC60D3538, 0x048971AFED44FC13,
0x728971AF6DBC7D5A, 0x538E71A2EDA37229, 0x01E17E51E7CC7DDA, 0x0E125E0B88C38ECA,
0x681B2104EEF3ECA5, 0x31642E62FEA293AA, 0x3E971E0381ADF58A, 0x6EC5710C72EDBFE5,
0x01CA826C2882B016, 0x678ACB1327E4C074, 0x3EF5C47577B5BF7B, 0xBFBDB41408BAD91B,
0x7D3CFC1408BA59DA, 0xFDD47D5D08BA595A, 0xFD5485DC41BA595A, 0xF21C0891D5C9595A,
0x8D134A622528DA13, 0x6413356DD6D8DB7F, 0xA8DFF9A129272583, 0x6413356DE5EBE94F,
0x675AE446ADF9F940, 0xE4121457E9E9F688, 0x25E404BF6AA0E661, 0xA6ACCD3426B8926E,
0xA2BCC2FC36B7628F, 0x63378EF527B8239E, 0xA27E467E6A7808D2, 0x497F6F711A0C0F3B,
0x2F1909177C6A692D, 0x0E1E091A7CEE7622, 0x011720156CAF5F2D, 0x105B301A9CBE1B3D,
0x9012BD52554152DD, 0xF05B945D25007BD2, 0xBC4B9B0D34446BDD, 0x9544CB4C1D4B2BCC,
0x9A74DA080D446B85, 0xAA35F3072D552795, 0xBB71E3080D1C0E9A, 0x0B04E319410C018A,
0x74E46050514D2885, 0x3D2CEB1DC18C008A, 0x5B4AF1695188E94B, 0x7A4DF164510CF644,
0x755D18E7190DE74B, 0x8528D118501CE35B, 0x9427D26C5FFC6012, 0x58EB1EAF5EED6F02,
0x9427D2639221A3CE, 0x58EB1EAF5EED6F02, 0x9427D2639221A3CE, 0x58EB1EAF5EED6F02,
0xD5A249F90B31E44E, 0xD5A379158A795C25, 0x9DC6899EC378D725, 0x168E91DF4830DFAE,
0x6E05D9DEC378FFE6, 0x69C75DD13CFDB7C6, 0x114415D1B7B5B7C6, 0x1144126533BAB7E6,
0x01379B283BE13EAF, 0x74E51EF2B0170DEA, 0xD47F8F6438AF45AC, 0xEC5BC3E97024DF34,
0xA45971D15460567C, 0x34CFFD5CCEE9F6C4, 0x9127BD788A60BE55, 0xA903E9F5C260BE52,
0x6688A1BDE614371E, 0xA60DE94219EDE4F6, 0xEE15620AC912E182, 0x7285F1997799503A,
0xFBCDC9BD3B1418A4, 0x707581BE892C3CE0, 0x38EB0B3504BA957A, 0x8A78B37D449ED1F3,
0x033081FBC90E4369, 0x033086AB2146672D, 0x77B8C2930512EA65, 0x8EC62A5C8E5AA541,
0xC6D05E9C0B125ABE, 0x2A85D3D41367813B, 0x2A85D48CFBAF0A73, 0xEA876C878FAEF2F0,
0x62C2E5CFF045F2F0, 0xF85868767BF44AB8, 0xF9384CCAF2B8DC11, 0xB100688E7BF0DC11,
0x3C90D0C643D4909C, 0x83D94A74D04A761A, 0x1143F8E74EC0FD97, 0x5D0BDCA3C788FE25,
0x5D0D0B4B87AC82AC, 0xD549336FD321CAAC, 0xD0A1FCE49B6AEED8, 0xC6D53C61D3951121,
0x93587458A64E9469, 0x935EABB06EC5DC99, 0x90E687C46F3D5F99, 0xF0C23B4F233D5F59,
0xA0E6A7C46B3D5F58, 0xF8C2134F273D5F59, 0xF9F2D7CE6F3D5F58, 0x70BA149331625F58,
0xEA179F22892ACF1D, 0xCE6B166E1F835483, 0x43232E4A5B0A1CC3, 0xC5AEBEF21332388F,
0x8DAD0C78AA10AB78, 0x8DAB4390E234EFF1, 0x05EF7BB4B6B9A7F1, 0x7807B43FFEF28385,
0x6E7374BAB60D7C7D, 0x3BFE3CA1C3D6F935, 0x3BF86B490B5DB1CD, 0x3F40653D0AA532CD,
0xC0BF9A4EE3A5320D, 0x4B0E220643E0BB45, 0xC646BE9CC87036EA, 0xFE62FA15804812A6,
0x73F4539E38001114, 0x57B0DAD6AB9E9B9F, 0xDA20484C1926D3DF, 0x92040CC551893A59,
0xC68944C5518CE1B1, 0x8EC760B1D9C8D995, 0xC6389F49D020161E, 0xB3E31A01C654D69B,
0x7B6852FD93D99E80, 0x7A90D1FD93DC7D68, 0x9390D13D9564731C, 0x3BD558756A9B8DE3,
0xAA4FD7C5E12A35AB, 0xE22FF3896C62B804, 0x5A67F13B0C46FC8D, 0xF8D8EBB780DC601D,
0xFDAE03DFA498E955, 0xB9CE278B29D0E955, 0x5101ACC344F49DDD, 0x25C1298BBB0B6A79,
0xA88932FE608E226F, 0xADF7DA36EBC6263A, 0x15F9AE371345263A, 0xEA0734DE1345E632,
0x5BBF7C6656CCAECD, 0x1305FAF8C5561546, 0xA11DBF718D4E58CB, 0x2A9723EB0AF610C9,
0xC2B766624267805F, 0xDAE2EB2A4267854B, 0x322D60626A120C07, 0x3DEDE52A95EDFB43,
0x7864AD2A95E93EC7, 0x7B9A28254E6C761F, 0x3B17643706E7761F, 0xBA179BC8F906F70D,
0xF600EFC83A03F8F4, 0x0925E788B10BB879, 0x09E6E2878C0B4786, 0x4C6DE2878887C289,
0x2A0BA2A3CC0E8A65, 0x0B0CA2AECC8A956A, 0x0044824C0DC2A465, 0x07BB63CDC549ECA7,
0x04F2672C0401ECA7, 0x040D98D32100676F, 0x62D4EDD3E2056852, 0x43D3EDDEE281775D,
0x489BCD3C23C94652, 0x4F642EBDFB420E90, 0x4C2D2A5E3A0A0E90, 0xB3D2D5BCBB198548,
0xC6D216B9B4E30448, 0xEEF6527E65144C9F, 0xCABADB3665144C9B, 0x47F2EB12299900A3,
0x0FD6AFD561A124EF, 0x47169C909E5EDB10, 0x47161C90AE7A9FD7, 0x339F50C88A2E129F,
0x039F70ECCEE94ABB, 0x869F70E9DF014ABB, 0xCE608F14BB89457B, 0xCED8025CE3AD01F0,
0x45943AD5ABAD01E0, 0x6594FA54E2F525A4, 0xE4DC92216BB125A4, 0xA8DC92016B8101C8,
0x6994A30E0BA54541, 0xB99FEBDDFCED65A3, 0x69ACA3ADD8A9E8EB, 0x216628E538EC65A3,
0xAA2AE16E74CC8C62, 0xE6F8162FBEFFC0B3, 0xD5BDDF98B1BE0880, 0xC5551ED070354151,
0x8192A799B1060037, 0x8ED658664EF90413, 0x4E6057A77DB1DCA5, 0x4A8396EE3D715FED,
0x045B95A339919EA5, 0xF33D571436899A28, 0x320E1F1C6E00D3F8, 0x3783574C7E4014B9,
0x23041BF43690A2B6, 0x238D524D7EC0FB92, 0x0BCD940C7D0278DA, 0xDBCEDD089FC33019,
0x93CA3CC955753F58, 0x53E17DA914F8F55B, 0x1BF53D2055E01DD8, 0x16BD1DC094A8DF53,
0x0EFD9489B0AC181B, 0x03B555AAF96E9353, 0x23F5DCE3FD4AD794, 0xDCF5F84770026FDC,
0x64BD9806F94A9023, 0x64BD9A26DDEE1D6B, 0xE3F5226EB5AF9423, 0x6ABDA92621E7B027,
0xE1F5A14E99AFC066, 0x99B428061AE7C026, 0x14FCEC8D52B7786E, 0x14FCEC0DD3705CCA,
0x14BE65451FB34C0E, 0x93F69ABAE633F446, 0x2BBE92F86F7BD06A, 0x0FBA1BB067975322,
0x82F2A3F877D5DA6A, 0x0BBA5C078935FECE, 0x23336CF8317DE68C, 0x0371E5B0393D6BC4,
0x127ED5F02932D38C, 0xAA36FDB2A07AF7C8, 0xEE27F2F2E06AF8E0, 0xD6034ABAD02871A8,
0x5F4B5BB5806861A7, 0x50037FF1382059E5, 0x1041F6B9374019F5, 0xF1BE274E7F04A0BC,
0xA99A635FC74C6C70, 0xE1D8EA17C70CEB38, 0xA801635B97466274, 0x64CDAF972F0EB283,
0x7C8C26DFE3C27E4F, 0x8373D9205B93C607, 0x0A3FD961D2DB7F4F, 0x05CCC9285B97770E,
0x1587A6271A647661, 0x6A8855075B1B7992, 0x99C8147854E849DB, 0xD8B71B8B04A136D4,
0x61F66BC27BAEC5B4, 0x45A2E68A7BAEC594, 0xCE32D6AE3F2389F4, 0xCA775DAC7EAA65B1,
0xEAB6DEE4F6E7ECF9, 0x63FE22A17DE5AD70, 0x22770260FEAD153D, 0x8A3A8B2806E89E3F,
0x0138CAA126291D77, 0x4978EEE5AF61E132, 0x01D8A36CE709A4BF, 0x259C2A24DF2DE832,
0x259C285C3713D612, 0xDA63D297BF1C1697, 0x9FEE9AE79B583E98, 0xBFEEAAC3DF9F76F0,
0xB0DE8E8752D376F0, 0xF186AAD3DF9B71E1, 0xBCAEA5D3DF9B7358, 0xADA19DF793163BD8,
0xA281B9B31A5E2B97, 0xADA1FEA215CE6EBF, 0xA291B1B31A6E2397, 0xADD1F6A215DE66BF,
0xA281B9B31A1E2B97, 0x4AE1FEA215CE6EBF, 0xC2EE3E2715CE6CB3, 0xE6AAB56FEA3196EC,
0xD5AC3C273AC6DEB4, 0x1960C3D8C08B3774, 0x1960C3DCE8AF73B3, 0x6DE98FBCCCE3FEFF,
0x25D9ABE841ABCEDB, 0x25D98BE8218F8A1C, 0x25D9BBE801ABCEDB, 0xAD8C44A0FE624D93,
0x5273BEB3766D8D16, 0x16FEF2835221065E, 0x16FEF281EB60667A, 0x9773BAB1CF34EB32,
0xDF7233F9CF34FB32, 0xAF5677D1C0CB32B1, 0xA0D63AF9CFCB23BE, 0xAF467FD1C0DB6BAF,
0xA0E632F9CFFB2BBE, 0xAF5677D1C0CB63AF, 0xA0963AF9CF8B23BE, 0xAF467FD1C0DB6BAF,
0xE72E3A5C88BB2BBE, 0x4F7BC514A89F6F37, 0xB0843CB72090AFB2, 0x6073748704D424FA,
0x99E29D4737D2ADB2, 0x703C3087E96A524D, 0x703D053F1695ABCA, 0x703D040FD214E30A,
0xBCF1C8C31149BD55, 0x703D040FDD857199, 0xBCF1C8C31149BD55, 0x703D040FDD857199,
0xB28B0B18A97AB319, 0xB2CB1417687E3E51, 0x3233549A206EC919, 0x7AF1E295D41B36DB,
0xB930EE189CDA222C, 0x75FC22D45016EEE0, 0xF0B4E35F1CC465AC, 0x7BB4E35FA5406A65,
0x70C15B8E2E0C5764, 0x70C0E38CA70816EF, 0xC9D897659BCB16EF, 0xBD19AC039BCB3310,
0x867FAC0323838A1E, 0x3E7FAC03AA0685DF, 0x3E7FBCBAAA0685DE, 0x1F78BCB72A198ADE,
0xD553F07FA1545B55, 0xA1EB21F4ED6DDA14, 0x70606DF6D1EC9852, 0xF37019F4DD61D6EA,
0x8550E1771D9EC62B, 0x06931E88E2617EFC, 0x8DD21F8C69277A3D, 0x6403D707A90C3EED,
0x25D2FC07A90C3F55, 0x61DAD9035F0446D4, 0xEA19DB8A1AC602DB, 0x1C11A20B5B2CD30B,
0xDD92724E5424F60F, 0xDD9273F6950FBAF3, 0x1E80FAB7850CFBF3, 0xD24C367B49CF3BC0,
0xC21DBD3741BEC488, 0xC790F57341F74FC0, 0x031BBD2341F74FAC, 0xFCE444A36553C2E4,
0xF408C7EB417F45AC, 0xD0AC4AA3657BCCE4, 0xF8257A5C9A843204, 0xC8656A5392C4BF4C,
0x8875657BB680AE43, 0x987A5D5FF291A103, 0x9732791BE39EF143, 0xCF163D0AECFEB153,
0x1EE1754EECBE361B, 0xD22DB9822072D7E4, 0x1EE1754EECBE1B28, 0xD22DB9822072D7E4,
0x2DD2498204D65AAC, 0xD22DB9822072D7E4, 0xD22D98A204D65AAC, 0x59650CEA20D2DDE4,
0xDA2D0CAAAB9AD58C, 0x16E1C0666759C548, 0xDA2D0CAAAB950984, 0x16E1C0666759C548,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC
};

const DECLSPEC_ALIGN(32) uint8_t _shellcode_Const[] = {
0x00, 0x00, 0x00, 0x00,                              //uint32_t unlocker_pid                        _shellcode_[0]
0x20, 0x90, 0x8C, 0x68,                              //uint32_t timestamp                           _shellcode_[4]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t unlocker_FpsValue_addr              _shellcode_[8]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Ptr_il2cpp_fps                      _shellcode_[0x10]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Ptr_Engine_fps                      _shellcode_[0x18]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t hksr_ui_ptr \ Hooked_funcstruct     _shellcode_[0x20]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t hksr_ui_type \ verfiy_func_ptr      _shellcode_[0x28]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Ptr_Function_link                   _shellcode_[0x30]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Ptr_struct_NtAPI                    _shellcode_[0x38]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	     //uint64_t PHooked_func_once                   _shellcode_[0x40]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Pplat_flag                          _shellcode_[0x48]
//Xmmseg Hook_once_pattern                                                                          _shellcode_[0x50]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//Xmmseg org_part                                                                                   _shellcode_[0x60]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//Xmmseg hookedpart                                                                                 _shellcode_[0x70]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t API_MessageBoxA                     _shellcode_[0x80]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t API_CloseHandle                     _shellcode_[0x88]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t API_GetForegroundWindow             _shellcode_[0x88]
//
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3                                               
0x55,                                                //push rbp
0x53,                                                //push rbx
0x56,                                                //push rsi
0x57,                                                //push rdi
0x41, 0x57,                                          //push r15
0x48, 0x83, 0xEC, 0x70,                              //sub rsp, 0x70
0x48, 0x8D, 0x6C, 0x24, 0x20,                        //lea rbp, qword [rsp+0x20] 
0x89,0xCA,                                           //mov edx, ecx
0xB9, 0xFF, 0xFF, 0x1F, 0x00,                        //mov ecx,1FFFFF
0x48, 0xE8, 0xA4, 0x03, 0x00, 0x00,                  //call API_OpenProcess
0x49, 0x89, 0xC7,           			             //mov r15, rax
0x48, 0x85, 0xC0,               	                 //test rax, rax
0x74, 0x60,             				             //jz return
0x44, 0x48, 0x8B, 0x3D, 0x3C, 0xFF, 0xFF, 0xFF,      //mov rdi, qword[unlocker_FpsValue_addr]
0x4D, 0x31, 0xF6,                                    //xor r14, r14 
0xBB, 0xF4, 0x01, 0x00, 0x00,                        //mov ebx, 0x1F4        (500ms)
0x44, 0x48, 0x8D, 0x35, 0x04, 0x00, 0x00, 0x00,      //lea rsi, qword:[Read_tar_fps]
0x48, 0x89, 0x5D, 0x08,                              //mov qword[rbp+0x8], rbx
//Read_tar_fps                                       
0x4C, 0x8D, 0x44, 0x24, 0x28,                        //lea r8, qword:[RSP+0x28]        
0x4C, 0x89, 0x74, 0x24, 0x20,                        //mov qword ptr ss:[rsp+20],r14
0x41, 0xB9, 0x04, 0x00, 0x00, 0x00,                  //mov r9d, 0x4  
0x48, 0x89, 0xFA,                                    //mov rdx, rdi  
0x4C, 0x89, 0xF9,                                    //mov rcx, r15  
0x48, 0xE8, 0xE4, 0x03, 0x00, 0x00,                  //call API_ReadProcessmem
0x85, 0xC0,                                          //test eax, eax     
0x75, 0x10,                                          //jnz continue   
//read fail                                          
0x48, 0x83, 0xC6, 0x30,                              //add r15, 0x30         //控制循环范围
0x4C, 0x89, 0xF9,                                    //mov rcx, r15
0xE8, 0x74, 0x00, 0x00, 0x00,                        //call Show Errormsg and CloseHandle 
0x0F, 0x1F, 0x40, 0x00,                              //nop
//continue                                           
0x8B, 0x4C, 0x24, 0x28,                              //mov ecx, qword:[RSP+0x28]      
0x48, 0xE8, 0x16, 0x00, 0x00, 0x00,                  //call Sync_auto
0x89, 0xD9,                                          //mov ecx, ebx
0x48, 0xE8, 0xFE, 0x03, 0x00, 0x00,                  //call API_Sleep
0xFF, 0xE6,                                          //jmp rsi
//return                                             
0x48, 0x83, 0xC4, 0x70,                              //add rsp, 0x70
0x41, 0x5F,                                          //pop r15
0x5F,                                                //pop rdi
0x5E,                                                //pop rsi
0x5B,                                                //pop rbx
0x5D,                                                //pop rbp
0xC3, 											     //ret
//int3
0xCC,
//int3
0x48, 0x83, 0xEC, 0x38,                              //sub rsp, 0x38
0x44, 0x48, 0x8B, 0x05, 0xD4, 0xFE, 0xFF, 0xFF,      //mov rax, qword ptr [Ptr_il2cpp_fps]
0x48, 0x85, 0xC0,                                    //test rax, rax
0x74, 0x1B,                                          //jz continue
0x2E, 0x8B, 0x00,                                    //mov eax, dword ptr ds:[rax]
0x83, 0xF8, 0x1E,                                    //cmp eax, 0x1E
0x74, 0x0D,                                          //jz equ30
0x83, 0xF8, 0x2D,                                    //cmp eax, 0x2D
0x74, 0x0E,                                          //jz noil2cppPtr
0x2E, 0xB9, 0xE8, 0x03, 0x00, 0x00,                  //mov ecx, 0x3E8 //equ60
0xEB, 0x06,                                          //jmp continue
//equ30
0x2E, 0xB9, 0x3C, 0x00, 0x00, 0x00,                  //mov ecx, 0x3C
//continue
0x48, 0x8B, 0x05, 0xCD, 0xFE, 0xFF, 0xFF,            //mov rax, qword ptr [Ptr_Function_link]
0x48, 0x85, 0xC0,                                    //test rax, rax
0x74, 0x04,                                          //jz noExtfunc
0xFF, 0xD0,                                          //call rax
0x89, 0xC1,                                          //mov ecx, eax
//noExtfunc
0x44, 0x48, 0x8B, 0x05, 0xA4, 0xFE, 0xFF, 0xFF,      //mov rax, qword ptr [Ptr_Engine_fps]
0x89, 0x08,                                          //mov dword ptr [rax], ecx
0x48, 0x83, 0xC4, 0x38,                              //add rsp, 0x38
0xC3,                                                //ret
0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x48, 0x83, 0xEC, 0x68, 							        //sub rsp, 0x68                   
0xFF, 0x15, 0xFE, 0xFE, 0xFF, 0xFF, 			            //call [API_closehandle]
0x31, 0xC9,										            //xor ecx, ecx
0x3E, 0x48, 0x8D, 0x54, 0x24, 0x20,                         //lea rdx, [rsp+0x20]             
0x4C, 0x8D, 0x42, 0x10, 							        //lea r8, [rsp+0x10]              
0x48, 0xB8, 0x53, 0x79, 0x6E, 0x63, 0x20, 0x66, 0x61, 0x69, //mov rax, 'Sync fai'      
0x48, 0xC7, 0x42, 0x08, 0x6C, 0x65, 0x64, 0x21,             //mov qword ptr [rdx+8], 'led!'   
0x48, 0x89, 0x42, 0x00,                                     //mov qword ptr [rdx], rax        
0x41, 0xC7, 0x00, 0x45, 0x72, 0x72, 0x6F,                   //mov dword ptr [r8], 'Error'     
0x66, 0x41, 0xC7, 0x40, 0x04, 0x72, 0x00,                   //mov word ptr [r8+4], '!'        
0x41, 0xB9, 0x10, 0x00, 0x00, 0x00, 		                //mov r9d, 0x10 (MB_OK)
0xFF, 0x15, 0xBA, 0xFE, 0xFF, 0xFF, 			            //call [API_MessageBoxA]          
0x48, 0x83, 0xC4, 0x68,                                     //add rsp, 0x68
0xC3, 											            //ret
0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3 
0x40, 0x53,                                                 //push rbx                     //entry
0x48, 0x83, 0xEC, 0x60, 							        //sub rsp, 0x60
0x4C, 0x48, 0x8D, 0x1D, 0x22, 0xFE, 0xFF, 0xFF, 	        //lea rbx, [code_block]
0x48, 0x8D, 0x4B, 0x38, 							        //lea rcx, [rbx+0x38]//ntapi_struct
0xC7, 0x01, 0x60, 0x00, 0x00, 0x00,                         //mov dword ptr [rcx], 0x60
0x31, 0xD2,                                                 //xor edx, edx
0x49, 0x89, 0xC8, 								            //mov r8, rcx
0xE8, 0x2E, 0x05, 0x00, 0x00, 					            //call Init_NtAPI
0x85, 0xC0, 							        			//test eax, eax
0x75, 0x1C, 							        			//jnz exit
0x48, 0x89, 0xD9,   					                    //mov rcx, rbx
0xBA, 0x00, 0x40, 0x00, 0x00,   		                    //mov edx, 0x4000
0x41, 0xB8, 0x20, 0x00, 0x00, 0x00, 				        //mov r8d, 0x20
0x44, 0xE8, 0xF6, 0x01, 0x00, 0x00, 				        //call API_VirtualProtect
0x8B, 0x0B,                  			                    //mov ecx, [rbx]
0xE8, 0x8F, 0xFE, 0xFF, 0xFF, 					            //call main_sync_start
0x90,
0x48, 0x83, 0xC4, 0x60, 							        //add rsp, 0x60
0x5B,                                                       //pop rbx
0xC3, 												        //ret
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//hksr_setui_fptr_start
0x4C, 0x48, 0x8B, 0x05, 0xF8, 0xFD, 0xFF, 0xFF,
0x40, 0x49, 0x89, 0xC8,
0x8B, 0x0D, 0xF6, 0xFD, 0xFF, 0xFF,
0x89, 0x08,
0x4C, 0x89, 0xC1,
0xE9, 0x24, 0x03, 0x00, 0x00,
//int3
0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x53, 0x55, 0x56, 0x57, 							    //push rbx,rbp,rsi,rdi      //GI_UI_UnHook_once
0x48, 0x83, 0xEC, 0x48, 							    //sub rsp, 0x48
0x48, 0x48, 0x8B, 0x1D, 0xF0, 0xFD, 0xFF, 0xFF,         //mov rbx, [PHooked_func_once]
0x48, 0x8D, 0xAC, 0x24, 0x28, 0x00, 0x00, 0x00,         //lea rbp, [rsp + 0x28]
0x48, 0x89, 0x4D, 0x08,                                 //mov [rbp + 8], rcx
0x48, 0x89, 0x55, 0x10,         			            //mov [rbp + 0x10], rdx
0x4C, 0x89, 0x45, 0x18,             	                //mov [rbp + 0x18], r8
0x4C, 0x89, 0x4D, 0x20,             	                //mov [rbp + 0x20], r9
0x48, 0x89, 0xD9,       					            //mov rcx, rbx
0xE8, 0x70, 0x01, 0x00, 0x00,            		        //call mem_protect_RXW
0xF3, 0x0F, 0x6F, 0x05, 0xD8, 0xFD, 0xFF, 0xFF,         //movdqa xmm0, [Hook_once_pattern]
0xF3, 0x0F, 0x7F, 0x03,             	                //movdqa [rbx], xmm0
0x48, 0x89, 0xD9,       						        //mov rcx, rbx
0xE8, 0x6C, 0x01, 0x00, 0x00,       		 		    //call mem_protect_RX
0x48, 0x8B, 0x4D, 0x08,                            	    //mov rcx, [rbp + 8]
0x48, 0x8B, 0x55, 0x10,             	 	            //mov rdx, [rbp + 0x10] 
0xFF, 0xD3,             				                //call rbx
0x48, 0x96,             				                //xchg rax, rsi
0x4C, 0x48, 0x8B, 0x3D, 0xB0, 0xFD, 0xFF, 0xFF,         //mov rdi, [Pplat_flag]
0x48, 0x89, 0xF9,       						        //mov rcx, rdi
0xE8, 0x40, 0x01, 0x00, 0x00,        		            //call mem_protect_RXW
0xC7, 0x07, 0x02, 0x00, 0x00, 0x00,                     //mov dword ptr [rdi], 2
0x48, 0x89, 0xF9,                       				//mov rcx, rdi
0xE8, 0x42, 0x01, 0x00, 0x00,       		 		    //call mem_protect_RX
0x48, 0x96,             				                //xchg rax, rsi
0x48, 0x83, 0xC4, 0x48,             	 	        	//add rsp, 0x48
0x5F, 0x5E, 0x5D, 0x5B,     					        //pop rdi, rsi, rbp, rbx
0xC3,               				 	                //ret
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x41, 0x57, 0x41, 0x56, 0x41, 0x55, 0x41, 0x54,                    //push r15,r14,r13,r12                 //hooked_func VA + 0x200
0x53, 0x55, 0x56, 0x57,                                            //push rbx,rbp,rsi,rdi   
0x48, 0x83, 0xEC, 0x68,                                            //sub rsp, 0x68
0x44, 0x48, 0x8B, 0x35, 0x38, 0xFD, 0xFF, 0xFF,                    //mov rsi, [Hooked_funcstruct]
0x40, 0x48, 0x8B, 0x1D, 0x38, 0xFD, 0xFF, 0xFF,                    //mov rbx, [verfiy_func_ptr]
0x48, 0x8D, 0xAC, 0x24, 0x28, 0x00, 0x00, 0x00,                    //lea rbp, [rsp + 0x28]
0x48, 0x89, 0x4D, 0x08,                                            //mov [rbp + 8], rcx
0x48, 0x89, 0x55, 0x10,							                   //mov [rbp + 0x10], rdx  
0x4C, 0x89, 0x45, 0x18, 						                   //mov [rbp + 0x18], r8
0x4C, 0x89, 0x4D, 0x20, 						                   //mov [rbp + 0x20], r9
0x4C, 0x48, 0x8D, 0x3D, 0xD0, 0x00, 0x00, 0x00,                    //lea rdi, [mem_protect_RXW]
0x4D, 0x31, 0xE4, 								                   //xor r12, r12
0x66,0x66,0x66,0x66,0x66,0x0F,0x1F,0x84,0x00,0x00,0x00,0x00,0x00,  //nop
0x4E, 0x8D, 0x2C, 0x26, 							               //lea r13, [rsi + r12]
0x49, 0x8B, 0x4D, 0x00, 							               //mov rcx, [r13]
0x49, 0x89, 0xCE, 								                   //mov r14, rcx
0x48, 0x85, 0xC9, 								                   //test rcx, rcx
0x74, 0x18, 										               //jz break
0xFF, 0xD7, 									                   //call rdi
0x85, 0xC0, 										               //test eax, eax
0x74, 0x0C, 										               //jz skip
0xF3, 0x41, 0x0F, 0x6F, 0x45, 0x20, 				               //movdqu xmm0, [r13 + 0x20]
0xF3, 0x41, 0x0F, 0x7F, 0x46, 0x00, 				               //movdqu [r14], xmm0
0x49, 0x83, 0xC4, 0x30, 							               //add r12, 0x30
0xEB, 0xD8, 										               //jmp continue
0x48, 0x89, 0xD9, 								                   //mov rcx, rbx
0xE8, 0x90, 0x00, 0x00, 0x00,   			                       //call mem_protect_RXW
0x48, 0x8B, 0x4D, 0x08, 						                   //mov rcx, [rbp + 8]
0x48, 0x8B, 0x55, 0x10, 						                   //mov rdx, [rbp + 0x10]
0x4C, 0x8B, 0x45, 0x18,     		                               //mov r8, [rbp + 0x18]
0x4C, 0x8B, 0x4D, 0x20,     	                                   //mov r9, [rbp + 0x20]
0xF3, 0x0F, 0x6F, 0x05, 0xF8, 0xFC, 0xFF, 0xFF,	                   //movdqu xmm0, [org_pattern]
0xF3, 0x0F, 0x7F, 0x03, 							               //movdqu [rbx], xmm0
0xFF, 0xD3, 										               //call rbx
0x49, 0x97, 										               //xchg r15, rax
0xF3, 0x0F, 0x6F, 0x05, 0xF8, 0xFC, 0xFF, 0xFF, 				   //movdqu xmm0, [Hooked_pattern]
0xF3, 0x0F, 0x7F, 0x03, 							               //movdqu [rbx], xmm0
0x4C, 0x48, 0x8D, 0x3D, 0x6C, 0x00, 0x00, 0x00,                    //lea rdi, [mem_protect_RX]
0x4D, 0x31, 0xE4, 								                   //xor r12, r12
0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,		       //nop
0x4E, 0x8D, 0x2C, 0x26, 							               //lea r13, [rsi + r12]
0x49, 0x8B, 0x4D, 0x00, 							               //mov rcx, [r13]
0x49, 0x89, 0xCE, 								                   //mov r14, rcx
0x48, 0x85, 0xC9, 								                   //test rcx, rcx
0x74, 0x14, 										               //jz break
0xF3, 0x41, 0x0F, 0x6F, 0x45, 0x10, 				               //movdqu xmm0, [r13 + 0x10]
0xF3, 0x41, 0x0F, 0x7F, 0x46, 0x00, 				               //movdqu [r14], xmm0
0xFF, 0xD7, 									                   //call rdi
0x49, 0x83, 0xC4, 0x30, 							               //add r12, 0x30
0xEB, 0xDC, 										               //jmp continue
0x48, 0x89, 0xD9, 								                   //mov rcx, rbx
0x48, 0xFF, 0xD7,             			                           //call rdi
0x49, 0x97, 										               //xchg r15, rax
0x48, 0x83, 0xC4, 0x68, 							               //add rsp, 0x68
0x5F, 0x5E, 0x5D, 0x5B,                                            //pop rdi, rsi, rbp, rbx,
0x41, 0x5C, 0x41, 0x5D, 0x41, 0x5E, 0x41, 0x5F,	                   //pop r15,r14,r13,r12
0xC3,                                                              //ret
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC,
//int3
0x41, 0xB8, 0x40, 0x00, 0x00, 0x00,    //Protect_RXW
0xBA, 0x00, 0x20, 0x00, 0x00,
0xE9, 0x10, 0x00, 0x00, 0x00,
0x41, 0xB8, 0x20, 0x00, 0x00, 0x00,    //Protect_RX
0xBA, 0x00, 0x20, 0x00, 0x00,
0xE9, 0x00, 0x00, 0x00, 0x00,
//Virtualprotect
0x48, 0x89, 0x54, 0x24, 0x18,
0x48, 0x83, 0xEC, 0x48,
0x4C, 0x8B, 0x15, 0x28, 0xFC, 0xFF, 0xFF,
0x49, 0xF7, 0xD2,
0xC7, 0x44, 0x24, 0x70, 0x00, 0x00, 0x00, 0x00,
0x45, 0x89, 0xC1,
0x4C, 0x8D, 0x44, 0x24, 0x60,
0x48, 0x81, 0xE1, 0x00, 0xF0, 0xFF, 0xFF,
0x48, 0x89, 0x4C, 0x24, 0x30,
0x48, 0x8D, 0x54, 0x24, 0x30,
0x4D, 0x8B, 0x52, 0x00,
0x48, 0x8D, 0x44, 0x24, 0x70,
0x48, 0x89, 0x44, 0x24, 0x20,
0x48, 0x83, 0xC9, 0xFF,
0x41, 0xFF, 0x52, 0x38,
0x85, 0xC0,
0x74, 0x08,
0x31, 0xC0,
0x48, 0x83, 0xC4, 0x48,
0xC3,
0xCC,
0xFF, 0xC0,
0x48, 0x83, 0xC4, 0x48,
0xC3,
//int3
0xCC, 0xCC, 0xCC,
//API_Openprocess
0x48, 0x83, 0xEC, 0x68,
0x4C, 0x8B, 0x05, 0xCD, 0xFB, 0xFF, 0xFF,
0x48, 0x33, 0xC0,
0x4C, 0x8D, 0x4C, 0x24, 0x20,
0x48, 0x89, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,
0x0F, 0x57, 0xC0,
0x48, 0x89, 0x44, 0x24, 0x28,
0x49, 0xF7, 0xD0,
0x8B, 0xC2,
0x8B, 0xD1,
0x0F, 0x11, 0x44, 0x24, 0x30,
0x48, 0x89, 0x44, 0x24, 0x20,
0x48, 0x8D, 0x8C, 0x24, 0x80, 0x00, 0x00, 0x00,
0x0F, 0x11, 0x44, 0x24, 0x40,
0xC7, 0x44, 0x24, 0x30, 0x30, 0x00, 0x00, 0x00,
0x0F, 0x11, 0x44, 0x24, 0x50,
0xC7, 0x44, 0x24, 0x48, 0x02, 0x00, 0x00, 0x00,
0x49, 0x8B, 0x00,
0x4C, 0x8D, 0x44, 0x24, 0x30,
0xFF, 0x90, 0x48, 0x00, 0x00, 0x00,
0x85, 0xC0,
0x74, 0x08,
0x33, 0xC0,
0x48, 0x83, 0xC4, 0x68,
0xC3,
0xCC,
0x48, 0x8B, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,
0x48, 0x83, 0xC4, 0x68,
0xC3,
//int3
0xCC, 0xCC, 0xCC,
//int3
0x48, 0x83, 0xEC, 0x38,                     //API_ReadProcessmem
0x48, 0x8B, 0x05, 0x4D, 0xFB, 0xFF, 0xFF,
0x48, 0xF7, 0xD0,
0x48, 0x8B, 0x00,
0x4C, 0x8B, 0x50, 0x30,
0x48, 0x8D, 0x44, 0x24, 0x60,
0x48, 0x89, 0x44, 0x24, 0x20,
0x41, 0xFF, 0xD2,
0x85, 0xC0,
0x74, 0x08,
0x31, 0xC0,
0x48, 0x83, 0xC4, 0x38,
0xC3,
0xCC,
0xFF, 0xC0,
0x48, 0x83, 0xC4, 0x38,
0xC3,
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x40, 0x53,                                 //API_Sleep
0x48, 0x83, 0xEC, 0x20,
0x48, 0x8B, 0x15, 0x0B, 0xFB, 0xFF, 0xFF,
0x8B, 0xD9,
0x48, 0x69, 0xCB, 0xF0, 0xD8, 0xFF, 0xFF,
0x48, 0xF7, 0xD2,
0x48, 0x8B, 0x12,
0x48, 0x89, 0x4C, 0x24, 0x38,
0x33, 0xC9,
0x48, 0x8B, 0x42, 0x68,
0x48, 0x8D, 0x54, 0x24, 0x38,
0xFF, 0xD0,
0x48, 0x83, 0xC4, 0x20,
0x5B,
0xC3,
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x40, 0x53,                                 //PowerSaveSet
0x48, 0x83, 0xEC, 0x38,
0x89, 0xCB,
0xFF, 0x15, 0x22, 0xFB, 0xFF, 0xFF,
0x48, 0xB9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x48, 0x39, 0x01,
0xB8, 0x0A, 0x00, 0x00, 0x00,
0x2E, 0x0F, 0x44, 0xC3,
0x48, 0x83, 0xC4, 0x38,
0x5B,
0xC3,
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x48, 0x89, 0x74, 0x24, 0x20,               //getprocaddr
0x57,
0x41, 0x55,
0x41, 0x56,
0x41, 0x57,
0x48, 0x8B, 0xF2,
0x4C, 0x8B, 0xC9,
0x48, 0x85, 0xC9,
0x0F, 0x84, 0x43, 0x01, 0x00, 0x00,
0x48, 0x85, 0xD2,
0x0F, 0x84, 0x3A, 0x01, 0x00, 0x00,
0xB8, 0x4D, 0x5A, 0x00, 0x00,
0x66, 0x39, 0x01,
0x0F, 0x85, 0x2C, 0x01, 0x00, 0x00,
0x8B, 0x41, 0x3C, 0x81, 0x3C, 0x08, 0x50, 0x45, 0x00, 0x00, 0x0F, 0x85, 0x1C, 0x01,
0x00, 0x00, 0x44, 0x8B, 0xBC, 0x08, 0x88, 0x00, 0x00, 0x00, 0x45, 0x85, 0xFF, 0x0F, 0x84, 0x0B,
0x01, 0x00, 0x00, 0x44, 0x8B, 0xAC, 0x08, 0x8C, 0x00, 0x00, 0x00, 0x41, 0xBE, 0xFF, 0xFF, 0xFF,
0xFF, 0x4A, 0x8D, 0x3C, 0x39, 0x48, 0x81, 0xFA, 0xFF, 0xFF, 0x00, 0x00, 0x77, 0x1A, 0x2B, 0x77,
0x10, 0x3B, 0x77, 0x14, 0x0F, 0x83, 0xE4, 0x00, 0x00, 0x00, 0x8B, 0x47, 0x1C, 0x48, 0x03, 0xC1,
0x8B, 0x14, 0xB0, 0xE9, 0xB3, 0x00, 0x00, 0x00, 0x44, 0x8B, 0x57, 0x18, 0x45, 0x85, 0xD2, 0x0F,
0x84, 0x94, 0x00, 0x00, 0x00, 0x4C, 0x89, 0x64, 0x24, 0x38, 0x45, 0x33, 0xDB, 0x44, 0x8B, 0x67,
0x20, 0x4D, 0x03, 0xE1, 0x41, 0x83, 0xEA, 0x01, 0x78, 0x7A, 0x48, 0x89, 0x5C, 0x24, 0x28, 0x48,
0x89, 0x6C, 0x24, 0x30, 0x66, 0x66, 0x66, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
0x43, 0x8D, 0x1C, 0x1A, 0x4C, 0x8B, 0xC6, 0xD1, 0xFB, 0x41, 0x8B, 0x04, 0x9C, 0x49, 0x03, 0xC1,
0x4C, 0x2B, 0xC0, 0x66, 0x66, 0x66, 0x66, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
0x41, 0x0F, 0xB6, 0x0C, 0x00, 0x0F, 0xB6, 0x10, 0x48, 0x8D, 0x40, 0x01, 0x84, 0xC9, 0x74, 0x04,
0x3A, 0xCA, 0x74, 0xEC, 0x3A, 0xCA, 0x73, 0x06, 0x44, 0x8D, 0x53, 0xFF, 0xEB, 0x17, 0x76, 0x06,
0x44, 0x8D, 0x5B, 0x01, 0xEB, 0x0F, 0x8B, 0x4F, 0x24, 0x45, 0x8D, 0x5A, 0x01, 0x49, 0x03, 0xC9,
0x44, 0x0F, 0xB7, 0x34, 0x59, 0x45, 0x3B, 0xDA, 0x7E, 0xA6, 0x48, 0x8B, 0x6C, 0x24, 0x30, 0x48,
0x8B, 0x5C, 0x24, 0x28, 0x4C, 0x8B, 0x64, 0x24, 0x38, 0x44, 0x3B, 0x77, 0x14, 0x73, 0x2F, 0x8B,
0x47, 0x1C, 0x49, 0x03, 0xC1, 0x41, 0x8B, 0xCE, 0x8B, 0x14, 0x88, 0x85, 0xD2, 0x74, 0x1F, 0x41,
0x3B, 0xD7, 0x72, 0x08, 0x43, 0x8D, 0x04, 0x2F,
0x3B, 0xD0,
0x72, 0x12,
0x8B, 0xC2,
0x49, 0x03, 0xC1,
0x48, 0x8B, 0x74, 0x24, 0x40,
0x41, 0x5F,
0x41, 0x5E,
0x41, 0x5D,
0x5F,
0xC3,
0x48, 0x8B, 0x74, 0x24, 0x40,
0x33, 0xC0,
0x41, 0x5F,
0x41, 0x5E,
0x41, 0x5D,
0x5F,
0xC3,
//getprocaddr_end
0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//Init_NtAPI
0x4C, 0x8B, 0xDC,
0x55, 0x56, 0x57,
0x49, 0x8D, 0x6B, 0xB8,
0x48, 0x81, 0xEC, 0x30, 0x01, 0x00, 0x00,
0x8B, 0x01, 0x49, 0x8B, 0xF0, 0x65, 0x48, 0x8B, 0x08, 0x48, 0x8B, 0x41, 0x18, 0x48, 0x8B,
0x48, 0x20, 0x48, 0x8B, 0x01, 0x48, 0x8B, 0x78, 0x20, 0x48, 0x85, 0xFF, 0x0F, 0x84, 0xC2, 0x07,
0x00, 0x00, 0x48, 0x8B, 0x00, 0x48, 0x83, 0x78, 0x20, 0x00, 0x0F, 0x84, 0xB4, 0x07, 0x00, 0x00,
0x49, 0x89, 0x5B, 0x08, 0x4D, 0x89, 0x73, 0x10, 0x45, 0x33, 0xF6, 0x8B, 0xDA, 0x85, 0xD2, 0x75,
0x46, 0x48, 0xB8, 0x88, 0x96, 0x91, 0x9A, 0xA0, 0x98, 0x9A, 0x8B, 0x48, 0x8D, 0x4C, 0x24, 0x38,
0x48, 0x89, 0x44, 0x24, 0x38, 0xB2, 0x02, 0x48, 0xB8, 0xA0, 0x89, 0x9A, 0x8D, 0x8C, 0x96, 0x90,
0x91, 0x48, 0x89, 0x44, 0x24, 0x40, 0xE8, 0xA5, 0x07, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x38,
0x4C, 0x89, 0x74, 0x24, 0x48, 0x48, 0x8B, 0xCF, 0xE8, 0xF3, 0xFD, 0xFF, 0xFF, 0x48, 0x85, 0xC0,
0x74, 0x05, 0xFF, 0xD0, 0x48, 0x8B, 0x18, 0x48, 0xB8, 0xB1, 0x8B, 0xBE, 0x93, 0x93, 0x90, 0x9C,
0x9E, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x48, 0x89, 0x44, 0x24, 0x38, 0xB2, 0x03, 0x48, 0xB8, 0x8B,
0x9A, 0xA9, 0x96, 0x8D, 0x8B, 0x8A, 0x9E, 0x48, 0x89, 0x44, 0x24, 0x40, 0x48, 0xB8, 0x93, 0xB2,
0x9A, 0x92, 0x90, 0x8D, 0x86, 0x32, 0x48, 0x89, 0x44, 0x24, 0x48, 0xE8, 0x50, 0x07, 0x00, 0x00,
0x48, 0x8D, 0x54, 0x24, 0x38, 0x44, 0x88, 0x74, 0x24, 0x4F, 0x48, 0x8B, 0xCF, 0xE8, 0x9E, 0xFD,
0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74, 0x16, 0x48, 0x85, 0xDB, 0x75, 0x18, 0x48, 0x8D, 0x55, 0xEC,
0x48, 0x8B, 0xC8, 0xE8, 0x58, 0x07, 0x00, 0x00, 0x83, 0xF8, 0x01, 0x74, 0x0B, 0xB8, 0x02, 0xC0,
0x00, 0x00, 0xEB, 0x7F, 0x48, 0x89, 0x45, 0x88, 0x48, 0xB8, 0xB1, 0x8B, 0xB9, 0x8D, 0x9A, 0x9A,
0xA9, 0x96, 0x4C, 0x89, 0xBC, 0x24, 0x60, 0x01, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x38, 0x48,
0x8D, 0x4C, 0x24, 0x38, 0x48, 0xB8, 0x90, 0x8D, 0x86, 0xE6, 0x9E, 0x93, 0xB2, 0x9A, 0x49, 0xBF,
0x8D, 0x8B, 0x8A, 0x9E, 0x93, 0xB2, 0x9A, 0x92, 0xB2, 0x03, 0x48, 0x89, 0x44, 0x24, 0x48, 0x4C,
0x89, 0x7C, 0x24, 0x40, 0xE8, 0xD7, 0x06, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x38, 0x44, 0x88,
0x74, 0x24, 0x4B, 0x48, 0x8B, 0xCF, 0xE8, 0x25, 0xFD, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74, 0x16,
0x48, 0x85, 0xDB, 0x75, 0x39, 0x48, 0x8D, 0x55, 0xF0, 0x48, 0x8B, 0xC8, 0xE8, 0xDF, 0x06, 0x00,
0x00, 0x83, 0xF8, 0x01, 0x74, 0x2C, 0xB8, 0x03, 0xC0, 0x00, 0x00, 0x4C, 0x8B, 0xBC, 0x24, 0x60,
0x01, 0x00, 0x00, 0x48, 0x8B, 0x9C, 0x24, 0x50, 0x01, 0x00, 0x00, 0x4C, 0x8B, 0xB4, 0x24, 0x58,
0x01, 0x00, 0x00, 0x48, 0x81, 0xC4, 0x30, 0x01, 0x00, 0x00, 0x5F, 0x5E, 0x5D, 0xC3, 0x48, 0x89,
0x45, 0x90, 0x48, 0xB8, 0xB1, 0x8B, 0xAD, 0x9A, 0x9E, 0x9B, 0xA9, 0x96, 0x4C, 0x89, 0x7C, 0x24,
0x40, 0x48, 0x89, 0x44, 0x24, 0x38, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x48, 0xB8, 0x90, 0x8D, 0x86,
0xF7, 0x93, 0x22, 0xB9, 0x8A, 0xB2, 0x03, 0x48, 0x89, 0x44, 0x24, 0x48, 0xE8, 0x4F, 0x06, 0x00,
0x00, 0x48, 0x8D, 0x54, 0x24, 0x38, 0x44, 0x88, 0x74, 0x24, 0x4B, 0x48, 0x8B, 0xCF, 0xE8, 0x9D,
0xFC, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74, 0x16, 0x48, 0x85, 0xDB, 0x75, 0x1B, 0x48, 0x8D, 0x55,
0xF8, 0x48, 0x8B, 0xC8, 0xE8, 0x57, 0x06, 0x00, 0x00, 0x83, 0xF8, 0x01, 0x74, 0x0E, 0xB8, 0x04,
0xC0, 0x00, 0x00, 0xE9, 0x73, 0xFF, 0xFF, 0xFF, 0x48, 0x89, 0x45, 0xA0, 0x48, 0xB8, 0xB1, 0x8B,
0xAF, 0x8D, 0x90, 0x8B, 0x9A, 0x9C, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x48, 0x89, 0x44, 0x24, 0x38,
0xB2, 0x03, 0x48, 0xB8, 0x8B, 0xA9, 0x96, 0x8D, 0x8B, 0x8A, 0x9E, 0x93, 0x48, 0x89, 0x44, 0x24,
0x40, 0x48, 0xB8, 0xB2, 0x9A, 0x92, 0x90, 0x8D, 0x86, 0xE9, 0xAF, 0x48, 0x89, 0x44, 0x24, 0x48,
0xE8, 0xDB, 0x05, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x38, 0x44, 0x88, 0x74, 0x24, 0x4E, 0x48,
0x8B, 0xCF, 0xE8, 0x29, 0xFC, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74, 0x16, 0x48, 0x85, 0xDB, 0x75,
0x1B, 0x48, 0x8D, 0x55, 0xFC, 0x48, 0x8B, 0xC8, 0xE8, 0xE3, 0x05, 0x00, 0x00, 0x83, 0xF8, 0x01,
0x74, 0x0E, 0xB8, 0x06, 0xC0, 0x00, 0x00, 0xE9, 0xFF, 0xFE, 0xFF, 0xFF, 0x48, 0x89, 0x45, 0xA8,
0x48, 0xB8, 0xB1, 0x8B, 0xB0, 0x8F, 0x9A, 0x91, 0xAF, 0x8D, 0x48, 0x8D, 0x4C, 0x24, 0x60, 0x48,
0x89, 0x44, 0x24, 0x60, 0xB2, 0x02, 0x48, 0xB8, 0x90, 0x9C, 0x9A, 0x8C, 0x8C, 0x1A, 0xBF, 0xA2,
0x48, 0x89, 0x44, 0x24, 0x68, 0xE8, 0x76, 0x05, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x60, 0x44,
0x88, 0x74, 0x24, 0x6D, 0x48, 0x8B, 0xCF, 0xE8, 0xC4, 0xFB, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74,
0x16, 0x48, 0x85, 0xDB, 0x75, 0x1B, 0x48, 0x8D, 0x55, 0x04, 0x48, 0x8B, 0xC8, 0xE8, 0x7E, 0x05,
0x00, 0x00, 0x83, 0xF8, 0x01, 0x74, 0x0E, 0xB8, 0x08, 0xC0, 0x00, 0x00, 0xE9, 0x9A, 0xFE, 0xFF,
0xFF, 0x48, 0x89, 0x45, 0xB8, 0x48, 0xB8, 0xB1, 0x8B, 0xBB, 0x9A, 0x93, 0x9E, 0x86, 0xBA, 0x48,
0x8D, 0x4D, 0x18, 0x48, 0x89, 0x45, 0x18, 0xB2, 0x02, 0x48, 0xB8, 0x87, 0x9A, 0x9C, 0x8A, 0x8B,
0x96, 0x90, 0x91, 0x48, 0x89, 0x45, 0x20, 0xE8, 0x14, 0x05, 0x00, 0x00, 0x48, 0x8D, 0x55, 0x18,
0x4C, 0x89, 0x75, 0x28, 0x48, 0x8B, 0xCF, 0xE8, 0x64, 0xFB, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x0F,
0x84, 0xC5, 0x04, 0x00, 0x00, 0x48, 0x89, 0x45, 0xD8, 0x48, 0x85, 0xDB, 0x0F, 0x85, 0xFE, 0x03,
0x00, 0x00, 0x8B, 0x48, 0x12, 0x4C, 0x8D, 0x40, 0x12, 0x81, 0xE1, 0xFF, 0xFF, 0xFF, 0x00, 0x81,
0xF9, 0x0F, 0x05, 0xC3, 0x00, 0x74, 0x17, 0x4C, 0x8D, 0x40, 0x08, 0x8B, 0x40, 0x08, 0x25, 0xFF,
0xFF, 0xFF, 0x00, 0x3D, 0x0F, 0x05, 0xC3, 0x00, 0x0F, 0x85, 0x8C, 0x04, 0x00, 0x00, 0x8B, 0x45,
0xEC, 0x48, 0x89, 0x44, 0x24, 0x40, 0x66, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0F, 0x31, 0x48, 0xC1, 0xE2, 0x20, 0x48, 0x0B, 0xC2, 0x48, 0x8B, 0xC8, 0x81, 0xE1, 0xFF, 0x07,
0x00, 0x00, 0x48, 0xC1, 0xE1, 0x04, 0x49, 0x03, 0xC8, 0x8B, 0x01, 0x25, 0xFF, 0xFF, 0xFF, 0x00,
0x3D, 0x0F, 0x05, 0xC3, 0x00, 0x75, 0xD9, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0F, 0x31, 0x48, 0xC1, 0xE2, 0x20, 0x48, 0x0B, 0xC2, 0x48, 0x8B, 0xD8, 0x81, 0xE3, 0xFF, 0x07,
0x00, 0x00, 0x48, 0xC1, 0xE3, 0x04, 0x49, 0x03, 0xD8, 0x8B, 0x13, 0x81, 0xE2, 0xFF, 0xFF, 0xFF,
0x00, 0x81, 0xFA, 0x0F, 0x05, 0xC3, 0x00, 0x75, 0xD7, 0x48, 0xF7, 0xD1, 0xC7, 0x44, 0x24, 0x28,
0x04, 0x00, 0x00, 0x00, 0x48, 0x89, 0x4C, 0x24, 0x38, 0x4C, 0x8D, 0x4C, 0x24, 0x30, 0x48, 0x8D,
0x4C, 0x24, 0x38, 0x48, 0xC7, 0x44, 0x24, 0x48, 0xFF, 0xFF, 0xFF, 0xFF, 0x45, 0x33, 0xC0, 0x48,
0xC7, 0x44, 0x24, 0x30, 0x00, 0x80, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x58, 0x4C, 0x89, 0x74,
0x24, 0x58, 0xC7, 0x44, 0x24, 0x20, 0x00, 0x30, 0x00, 0x00, 0xE8, 0x11, 0x05, 0x00, 0x00, 0x85,
0xC0, 0x0F, 0x88, 0x64, 0xFD, 0xFF, 0xFF, 0x48, 0x8B, 0x44, 0x24, 0x58, 0x48, 0x8D, 0xB8, 0x00,
0x10, 0x00, 0x00, 0x48, 0x89, 0x38, 0x4C, 0x8B, 0x44, 0x24, 0x58, 0x49, 0x81, 0xC0, 0x00, 0x20,
0x00, 0x00, 0x44, 0x89, 0x75, 0x68, 0x48, 0x81, 0x6C, 0x24, 0x30, 0x00, 0x20, 0x00, 0x00, 0x4C,
0x89, 0x44, 0x24, 0x60, 0x0F, 0x31, 0x48, 0xC1, 0xE2, 0x20, 0x48, 0xF7, 0xD3, 0x48, 0x0B, 0xD0,
0x48, 0x8D, 0x44, 0x24, 0x70, 0x48, 0x33, 0xD0, 0x48, 0x8D, 0x45, 0xE0, 0x48, 0x8B, 0xCA, 0x48,
0xC1, 0xE9, 0x20, 0x4C, 0x8B, 0xC9, 0x4C, 0x8B, 0xD1, 0x4C, 0x33, 0xCA, 0x41, 0xF7, 0xD2, 0x4C,
0x33, 0xC8, 0x41, 0x0F, 0xB7, 0xC9, 0x45, 0x33, 0xD1, 0x49, 0x8B, 0xC1, 0x48, 0xC1, 0xE8, 0x10,
0x66, 0x41, 0x33, 0xC1, 0x49, 0xB9, 0xC7, 0x44, 0x24, 0x04, 0xFF, 0xFF, 0xFF, 0xFF, 0x44, 0x0F,
0xB6, 0xD8, 0x48, 0x33, 0xC1, 0x0F, 0xB6, 0xC0, 0x48, 0x8D, 0x40, 0x40, 0x49, 0xC1, 0xE3, 0x04,
0x48, 0xC1, 0xE0, 0x04, 0x4D, 0x03, 0xD8, 0x4E, 0x8D, 0x04, 0x18, 0x0F, 0xB7, 0xC2, 0x66, 0xF7,
0xD0, 0x49, 0x89, 0x58, 0x08, 0x48, 0x33, 0xC1, 0x41, 0xC7, 0x40, 0x10, 0x50, 0x48, 0x8D, 0x05,
0x0F, 0xB6, 0xD0, 0x48, 0xB8, 0x4C, 0x87, 0x14, 0x24, 0x59, 0x50, 0x48, 0xB9, 0x49, 0x89, 0x00,
0x48, 0x83, 0xC2, 0x03, 0x41, 0xC6, 0x40, 0x28, 0xC3, 0x48, 0xC1, 0xE2, 0x04, 0x49, 0x03, 0xD0,
0x41, 0x0F, 0xB6, 0xCA, 0xC1, 0xE1, 0x04, 0x48, 0x03, 0xCA, 0x8D, 0x41, 0x60, 0x41, 0x2B, 0xC0,
0x83, 0xE8, 0x18, 0x41, 0x89, 0x40, 0x14, 0x48, 0x8B, 0xC2, 0x48, 0xC1, 0xE0, 0x20, 0x48, 0x0D,
0x48, 0xC7, 0x04, 0x24, 0x49, 0x89, 0x40, 0x18, 0x48, 0x8B, 0xC2, 0x49, 0x23, 0xC1, 0x48, 0x0D,
0xC7, 0x44, 0x24, 0x04, 0x49, 0x89, 0x40, 0x20, 0x48, 0xB8, 0x48, 0x8D, 0xA4, 0x24, 0x00, 0xFF,
0xFF, 0xFF, 0x48, 0x89, 0x41, 0x60, 0x48, 0xB8, 0x48, 0x8D, 0xA4, 0x24, 0x20, 0x02, 0x00, 0x00,
0x48, 0x89, 0x41, 0x68, 0x48, 0xB8, 0x48, 0x87, 0x04, 0x24, 0x48, 0x94, 0x48, 0x8B, 0x48, 0x89,
0x41, 0x70, 0x48, 0xB8, 0x68, 0x08, 0x48, 0x8B, 0x40, 0x00, 0x48, 0x83, 0x48, 0x89, 0x41, 0x78,
0x48, 0xB8, 0x50, 0x48, 0x8B, 0xC4, 0x48, 0x8D, 0xA4, 0x24, 0xC7, 0x81, 0x80, 0x00, 0x00, 0x00,
0xC4, 0x10, 0xC3, 0xCC, 0x48, 0x89, 0x42, 0x00, 0x48, 0xB8, 0x80, 0xF9, 0xFF, 0xFF, 0x48, 0x87,
0x2C, 0x24, 0x48, 0x89, 0x42, 0x08, 0x48, 0xB8, 0x48, 0x83, 0xEC, 0x08, 0x48, 0x89, 0x04, 0x24,
0x48, 0x89, 0x42, 0x10, 0x48, 0xB8, 0x48, 0x8D, 0xA4, 0x24, 0xE0, 0xFE, 0xFF, 0xFF, 0x48, 0x89,
0x42, 0x18, 0x48, 0xB8, 0xFF, 0x30, 0x89, 0x28, 0x48, 0x8D, 0x40, 0x08, 0x48, 0x89, 0x42, 0x20,
0x48, 0xB8, 0x0F, 0x10, 0x40, 0x30, 0x0F, 0x11, 0x44, 0x24, 0x48, 0x89, 0x42, 0x28, 0x48, 0xB8,
0x28, 0x0F, 0x10, 0x40, 0x40, 0x0F, 0x11, 0x44, 0x48, 0x89, 0x42, 0x30, 0x48, 0xB8, 0x24, 0x38,
0x0F, 0x10, 0x40, 0x50, 0x0F, 0x11, 0x48, 0x89, 0x42, 0x38, 0x48, 0xB8, 0x44, 0x24, 0x48, 0x0F,
0x10, 0x40, 0x60, 0x0F, 0x48, 0x89, 0x42, 0x40, 0x49, 0xB9, 0x44, 0x48, 0xF7, 0xD1, 0xFF, 0xE1,
0xCC, 0xCC, 0x48, 0xB8, 0x11, 0x44, 0x24, 0x58, 0x48, 0x87, 0x40, 0x00, 0x48, 0x89, 0x42, 0x48,
0x4C, 0x89, 0x4A, 0x50, 0x4C, 0x89, 0xD9, 0x49, 0xF7, 0xD0, 0x48, 0xB8, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0x48, 0x89, 0x41, 0x18, 0x48, 0xB8, 0x51, 0xB8, 0xFF, 0xFF, 0xFF, 0xFF,
0x48, 0xB9, 0x48, 0x89, 0x41, 0x00, 0x4C, 0x89, 0x41, 0x08, 0x4C, 0x89, 0x49, 0x10, 0xF3, 0x0F,
0x6F, 0x01, 0xF3, 0x41, 0x0F, 0x6F, 0x4B, 0x10, 0xF3, 0x0F, 0x7F, 0x41, 0x20, 0xF3, 0x0F, 0x7F,
0x49, 0x30, 0xF3, 0x0F, 0x7F, 0x41, 0x40, 0xF3, 0x0F, 0x7F, 0x49, 0x50, 0xF3, 0x0F, 0x7F, 0x41,
0x60, 0xF3, 0x0F, 0x7F, 0x49, 0x70, 0x41, 0xB9, 0x20, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24,
0x60, 0x4C, 0x8D, 0x44, 0x24, 0x30, 0x90, 0x8B, 0x45, 0xEC, 0x89, 0x41, 0x02, 0x8B, 0x45, 0x04,
0x48, 0x89, 0x4D, 0x88, 0x48, 0x83, 0xC1, 0x20, 0x89, 0x41, 0x02, 0x8B, 0x45, 0xFC, 0x48, 0x89,
0x4D, 0xB8, 0x48, 0x83, 0xC1, 0x20, 0x89, 0x41, 0x02, 0x8B, 0x45, 0xF8, 0x48, 0x89, 0x4D, 0xA8,
0x48, 0x83, 0xC1, 0x20, 0x89, 0x41, 0x02, 0x8B, 0x45, 0xFC, 0x48, 0x89, 0x44, 0x24, 0x40, 0x48,
0x8D, 0x45, 0x68, 0x48, 0x89, 0x4D, 0xA0, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x48, 0x89, 0x44, 0x24,
0x20, 0x3E, 0x3E, 0xE8, 0x78, 0x02, 0x00, 0x00, 0x85, 0xC0, 0x0F, 0x88, 0xCB, 0xFA, 0xFF, 0xFF,
0x0F, 0x28, 0x44, 0x24, 0x70, 0x48, 0x8D, 0x45, 0x68, 0x48, 0xC7, 0x44, 0x24, 0x30, 0x00, 0x20,
0x00, 0x00, 0x4C, 0x8D, 0x44, 0x24, 0x30, 0x0F, 0x11, 0x07, 0x48, 0x8D, 0x54, 0x24, 0x58, 0x41,
0xB9, 0x02, 0x00, 0x00, 0x00, 0x0F, 0x28, 0x4D, 0x80, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x0F, 0x11,
0x4F, 0x10, 0x48, 0x89, 0x44, 0x24, 0x20, 0x0F, 0x28, 0x45, 0x90, 0x0F, 0x11, 0x47, 0x20, 0x0F,
0x28, 0x4D, 0xA0, 0x0F, 0x11, 0x4F, 0x30, 0x0F, 0x28, 0x45, 0xB0, 0x0F, 0x11, 0x47, 0x40, 0x0F,
0x28, 0x4D, 0xC0, 0x0F, 0x11, 0x4F, 0x50, 0x0F, 0x28, 0x45, 0xD0, 0x0F, 0x11, 0x47, 0x60, 0xE8,
0x0C, 0x02, 0x00, 0x00, 0x85, 0xC0, 0x0F, 0x88, 0x5F, 0xFA, 0xFF, 0xFF, 0x48, 0x8B, 0x44, 0x24,
0x58, 0x48, 0xF7, 0xD0, 0x48, 0x89, 0x06, 0x33, 0xC0, 0xE9, 0x4D, 0xFA, 0xFF, 0xFF, 0xCC, 0xCC,
0xC7, 0x44, 0x24, 0x28, 0x04, 0x00, 0x00, 0x00, 0x4C, 0x8D, 0x4C, 0x24, 0x60, 0x4C, 0x89, 0x74,
0x24, 0x30, 0x48, 0x8D, 0x54, 0x24, 0x30, 0x48, 0xC7, 0x44, 0x24, 0x60, 0x00, 0x20, 0x00, 0x00,
0xC7, 0x44, 0x24, 0x20, 0x00, 0x30, 0x00, 0x00, 0x48, 0x83, 0xC9, 0xFF, 0x48, 0xFF, 0x55, 0x88,
0x85, 0xC0, 0x0F, 0x88, 0x13, 0xFA, 0xFF, 0xFF, 0x48, 0x8B, 0x4C, 0x24, 0x30, 0x4C, 0x8D, 0x44,
0x24, 0x60, 0x41, 0xB9, 0x02, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x30, 0x48, 0x8D, 0x81,
0x00, 0x10, 0x00, 0x00, 0x48, 0x89, 0x01, 0x48, 0x83, 0xC9, 0xFF, 0x0F, 0x28, 0x44, 0x24, 0x70,
0x0F, 0x11, 0x00, 0x0F, 0x28, 0x4D, 0x80, 0x0F, 0x11, 0x48, 0x10, 0x0F, 0x28, 0x45, 0x90, 0x0F,
0x11, 0x40, 0x20, 0x0F, 0x28, 0x4D, 0xA0, 0x0F, 0x11, 0x48, 0x30, 0x0F, 0x28, 0x45, 0xB0, 0x0F,
0x11, 0x40, 0x40, 0x0F, 0x28, 0x4D, 0xC0, 0x0F, 0x11, 0x48, 0x50, 0x0F, 0x28, 0x45, 0xD0, 0x0F,
0x11, 0x40, 0x60, 0x48, 0x8D, 0x45, 0x68, 0x48, 0x89, 0x44, 0x24, 0x20, 0x48, 0xFF, 0x55, 0xA8,
0x85, 0xC0, 0x0F, 0x85, 0xA3, 0xF9, 0xFF, 0xFF, 0x48, 0x8B, 0x44, 0x24, 0x30, 0x48, 0xF7, 0xD0,
0x48, 0x89, 0x06, 0x33, 0xC0, 0xE9, 0x91, 0xF9, 0xFF, 0xFF, 0xB8, 0xDE, 0xC0, 0xAD, 0xDE, 0xE9,
0x87, 0xF9, 0xFF, 0xFF, 0xB8, 0x35, 0x01, 0x00, 0xC0, 0x48, 0x81, 0xC4, 0x30, 0x01, 0x00, 0x00,
0x5F, 0x5E, 0x5D, 0xC3,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//dec_str_start
0x80, 0xC2, 0xFF, 0x74, 0x17, 0x0F, 0xB6, 0xC2, 0x48, 0x8D, 0x04, 0xC1, 0x0F, 0x1F, 0x40, 0x00,
0x48, 0xF7, 0x10, 0x48, 0x8D, 0x40, 0xF8, 0x80, 0xC2, 0xFF, 0x75, 0xF4, 0x0F, 0xB6, 0xC2, 0x48,
0xF7, 0x14, 0xC1, 0x48, 0x8D, 0x0C, 0xC1,
0xC3,
//dec_str_end
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//paser_syscallnum_start
0x4C, 0x8B, 0xD2, 0x4C, 0x8B, 0xC1, 0x48, 0x85, 0xC9, 0x0F, 0x84, 0xB9, 0x00, 0x00, 0x00, 0x8B,
0x01, 0x3D, 0x4C, 0x8B, 0xD1, 0xB8, 0x75, 0x0B, 0x8B, 0x41, 0x04, 0x89, 0x02, 0xB8, 0x01, 0x00,
0x00, 0x00, 0xC3, 0x3C, 0xE9, 0x74, 0x18, 0xB9, 0xFF, 0x25, 0x00, 0x00, 0x66, 0x3B, 0xC1, 0x74,
0x0E, 0xB9, 0x48, 0xB8, 0x00, 0x00, 0x66, 0x3B, 0xC1, 0x0F, 0x85, 0x89, 0x00, 0x00, 0x00, 0xB8,
0x01, 0x00, 0x00, 0x00, 0xB9, 0x10, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00,
0x8B, 0xD1, 0x4D, 0x8B, 0xC8, 0x4C, 0x2B, 0xCA, 0x41, 0x81, 0x39, 0x4C, 0x8B, 0xD1, 0xB8, 0x74,
0x46, 0x42, 0x81, 0x3C, 0x02, 0x4C, 0x8B, 0xD1, 0xB8, 0x4E, 0x8D, 0x0C, 0x02, 0x74, 0x10, 0x83,
0xC1, 0x10, 0xFF, 0xC0, 0x83, 0xF8, 0x20, 0x76, 0xD7, 0xB8, 0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0x83,
0xC1, 0x04, 0x46, 0x8B, 0x04, 0x01, 0x41, 0x8B, 0xD0, 0x44, 0x2B, 0xC0, 0x8B, 0xC8, 0xD1, 0xE9,
0xB8, 0x01, 0x00, 0x00, 0x00, 0x2B, 0xD1, 0x41, 0x81, 0x79, 0x08, 0xF6, 0x04, 0x25, 0x08, 0x44,
0x0F, 0x44, 0xC2, 0x45, 0x89, 0x02, 0xC3, 0x8B, 0xD0, 0xD1, 0xEA, 0x41, 0x81, 0x79, 0x08, 0xF6,
0x04, 0x25, 0x08, 0x0F, 0x45, 0xD0, 0x83, 0xC1, 0xFC, 0x4C, 0x2B, 0xC1,
0xB8, 0x01, 0x00, 0x00, 0x00,
0x41, 0x03, 0x10,
0x41, 0x89, 0x12,
0xC3,
0x33, 0xC0,
0xC3,
//paser_syscallnum_end
0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//syscall_part
0x48, 0xFF, 0x71, 0x08, 0x4C, 0x8B, 0x51, 0x10, 0x48, 0x8B, 0x49, 0x00, 0x44, 0x48, 0x8D, 0x05,
0x6C, 0x00, 0x00, 0x00, 0x50, 0x48, 0x8B, 0xC4, 0x48, 0x8D, 0xA4, 0x24, 0x80, 0xF9, 0xFF, 0xFF,
0x48, 0x87, 0x2C, 0x24, 0x48, 0x83, 0xEC, 0x08, 0x48, 0x89, 0x04, 0x24, 0x48, 0x8D, 0xA4, 0x24,
0xE0, 0xFE, 0xFF, 0xFF, 0xFF, 0x30, 0x89, 0x28, 0x48, 0x8D, 0x40, 0x08, 0x0F, 0x10, 0x40, 0x30,
0x0F, 0x11, 0x44, 0x24, 0x28, 0x0F, 0x10, 0x40, 0x40, 0x0F, 0x11, 0x44, 0x24, 0x38, 0x0F, 0x10,
0x40, 0x50, 0x0F, 0x11, 0x44, 0x24, 0x48, 0x0F, 0x10, 0x40, 0x60, 0x0F, 0x11, 0x44, 0x24, 0x58,
0x48, 0x87, 0x40, 0x00, 0x44, 0x48, 0xF7, 0xD1, 0xFF, 0xE1, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0x48, 0x8D, 0xA4, 0x24, 0x00, 0xF0, 0xFF, 0xFF, 0x48, 0x8D, 0xA4, 0x24, 0x00, 0xF0, 0xFF, 0xFF,
0x48, 0x8D, 0xA4, 0x24, 0x20, 0x21, 0x00, 0x00, 0x48, 0x87, 0x04, 0x24, 0x48, 0x94,
0x48, 0x8B, 0x68, 0x08,
0x48, 0x8B, 0x40, 0x00,
0x48, 0x83, 0xC4, 0x10,
0xC3,
//
0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
};

#define shellcode_entryVA           (0x1D0)
#define HKSR_UISet_FuncVA           (0x220)
#define GI_UnHooked_UI_fVA          (0x240)
#define GI_hooked_Vfunc_VA          (0x2D0)
#define PowerSaveSet_FuncVA         (0x560)


#endif // SHELLCODE_HEADER_H