#ifndef __SHELLCODE_H__
#define __SHELLCODE_H__

#include <stdint.h>

//simple encrypt to avoid antivirus detection
const DECLSPEC_ALIGN(32) uint64_t _PE_MEM_LOADER[] = {
0xC985480574D28548, 0xCCCCCCC3C0313675, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0x48000001B9158D4C, 0xCB1082F74BB815B8, 0x4902314902874948, 0xC9314DC0314D12F7,
0x0204874B08408D4D, 0x78F881490204314B, 0xCCFD74EB75000012, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0x001615894898CCCC, 0xCCCCCCCC4CEB0000, 0xCCCCCCCCCCCCCCCC,
0x0000000000000000, 0x0000000000000000, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0x68EC834856405340, 0x00000030B8CB8948, 0x4401482024448948, 0x3120244C8D482024,
0x35E82824448D4CD2, 0x7275C08548000009, 0x0589482824448B48, 0xE8D98948FFFFFF84,
0x65C689480000007C, 0x0000006025148B4C, 0x617574726956B848, 0x8B4D18528B4D466C,
0x8B4D00528B4D2052, 0x8948204A8B490052, 0x72382444C7302444, 0x3024548D48006565,
0x85480000033AE848, 0x28244C8B481474C0, 0xB841D23148D1F748, 0x4890D0FF00008000,
0x5B5E68C48348F089, 0xCCCCCCCCCCCCCCC3, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xFFD86C355FF510AA, 0xFF5E088D638C73E6, 0x99A783C59A8F3FE6, 0x5EEF8CB19EC806A7,
0x9A6CC44E6137F867, 0xDDE7818D3E68B92F, 0x22187E72FFAFF17F, 0x2716960ADBDB7837,
0xE793DEFA50937837, 0x6CDB23BCDDDB6942, 0x2D93E73F95A34D36, 0x65C7A0B4D0601269,
0x2DAF84E85928C5E2, 0x61EFA08CD0640B69, 0x61E9A764E84067E0, 0x52ACB30B5F4F22E0,
0xE5A3F2139ACC6B04, 0x8298B77575CF26D8, 0xE4FED11313F055DE, 0xC5F9D11E13744AD1,
0x8479DD935BB7FDDE, 0x9C0D1D164B7AB955, 0x5C865902862E3214, 0x8B85110E4B62B955,
0x8B8514B6A3ACBA1D, 0x8DDA2FF7C56F457B, 0xD2F162294E238B09, 0xD245C5100B48FF39,
0x62CA4E55693CFF39, 0x5B8F8056253CFF39, 0xDE8BC1DD646F8B18, 0x9383295E2C24FFD8,
0x5306C18F642CBE55, 0x5319CE5FEF688E21, 0x35DB7950FFDF8160, 0x74CA0C5AC3D369A1,
0x74CA03A52152602A, 0x75D602E93756ED62, 0x743C81A035966E2B, 0x777085E1BED7B85E,
0xFE3828949FEEFD96, 0xCE1C5C1DD39ED9FA, 0xC11C5C1D4739E0BF, 0x7697191D47399F3B,
0x33611A5147399FAB, 0x337E153E3335F992, 0xDBB016763F7B72D3, 0x93589D3E3F7B7117,
0x8326167F5E0FB192, 0x43A3E87C16093AD3, 0xCEEBEE709D417AA7, 0xFC9F27F5D5D17CBB,
0xB498CC2462DE79C2, 0x3FD01D272ADC2F4F, 0xBA981D272B96C782, 0xF2981D27C112C842,
0x71D01AAE891A0BC1, 0xB85552A502520306, 0x81104663811BCD73, 0xE62B0305156EC115,
0xAED4320EFE01B213, 0xAED432C617FC7D90, 0x2ED8BF8ED34B72D1, 0x2ED8BF8E1E5FFF99,
0x67274071E19E38D1, 0xEC63643B6ADAEDD2, 0x67227BC2AB9BE590, 0x47C2F8C04A18A451,
0xB0E2384348D92710, 0xE269184348D90352, 0xA6E4508B0DD6475E, 0xE26D185D0E9E277A,
0x846D185E8776075E, 0x820A231BE1B2F81F, 0x820AF39C6AF3666D, 0xDE81BBB01E33E36D,
0x96A3CF6B9B7BFB5D, 0x06B9BBAB1E33F8D6, 0x8BF8752056F3CB93, 0x83BBFE68860CCAC3,
0xF67B7B208E57478B, 0x82BBFE08C9DC066C, 0xCA7DFD4009EF434D, 0x1A82FC1084AE8DC6,
0xF14477588ADA4D43, 0x0EBB88A44A1D055C, 0xF5740BECB52C13B7, 0x1D8BC26FFDFA98FF,
0xE5028AFFFDFA9B93, 0x9189C68FD99610DB, 0xDDE1E2D352DE20FF, 0xF98D699F12FA4474,
0x7AC511BB66710C4C, 0xB609D2E439304488, 0x7AC51E28F5FC8844, 0xB609D2E439304488,
0xE15F87C41D6CCDC0, 0xE1B3068C4A2D9981, 0x6AFFEC07022D9983, 0x6B926808CBA8D14A,
0x0F1667DA4EE0D14A, 0x0F163D97F6E0D14B, 0x0F176B12F9E1E82D, 0x5F1F5793C5A0632D,
0x5F1E1116CAA06368, 0x5F1E991E6E2B2768, 0x5E2B1D118AAE6268, 0x5EA7159501EA6268,
0xA19434A18CA06268, 0xA19435D1A824EB2C, 0x20DCCA2E57DB546D, 0x0BC6BD2E5724AB97,
0x0F45B23A391FBBF9, 0x0C0DAE7CB21FBBF8, 0x0C0D15951A0B3039, 0xDE88508D4C807439,
0x57C4508D4C1CF036, 0xDC80508D4D64D49A, 0x35831DAD23EF9045, 0xBCCF61D522051304,
0xDAA961D5238537B0, 0xFBAE61D8230128BF, 0x2A6BEA94391DA5FC, 0x2922EA097596E407,
0x4F448C6FB4BDA8CE, 0x6E438C62B439B7C1, 0x7FF5836AB08FB880, 0x7B8143EEB1C635C8,
0x7DF281D45DB2F7F2, 0x7B84963FA2E17AB6, 0x350F99D4A3BAF7F2, 0xFC0CD0D5F937B2D6,
0x2637958CC580BD92, 0x27B7B1384ECC1BEC, 0x26C795BCC5881BEC, 0x27BFB1104EC41BEC,
0x60CCA56E75801BEC, 0xEB8D646D3C9C5D67, 0xDCF9B6E8B488D6A8, 0xDCF9666ABB5CEDE9,
0xD3295D4ABFD1AEE9, 0x11A2194ABFD16A6A, 0x1EE3C1C1F6106927, 0x8E85D0B536946991,
0x8FC666BA12E047AD, 0xBC37137A9623B8E5, 0xBC355B5E0AA8F025, 0xBC35595ECE29B825,
0x7F6807019268E764, 0xFE20D72ADBBB6C2C, 0xB6F8A42ADBBA4CD6, 0x26EED0F85EF28B5D,
0x522754F85244841C, 0x92D81CD856080C10, 0xDE55543324CA3758, 0x3675504FAC8A177C,
0x7EB5DB03AC8A1720, 0x5DB4A0830FFED7A5, 0xEBBB8DF60EAD5AED, 0x393F8F358DE558BE,
0x62B2C7E5CF6846CA, 0xA00CC8F6B8617ACB, 0xDF81DB40B7DE4646, 0x3DF409C4CFE2CBAE,
0xD5B8C14F8635A8E6, 0x2A47A1A679CA5532, 0x7CAE60A53008DECD, 0xB062AC69FCF72132,
0x7CAE5396053504CD, 0xB0629F5AC9F9C801, 0xE4EBD742EDBD414D, 0x6FA3EFAE6EF55169,
0x2B64A751910CCA6C, 0xDC2DA751910C8248, 0x953ED35191037D88, 0x14772CAE61039D09,
0x50FE60AE61139DC9, 0x74BAA77E965BCDED, 0x3837EB7E965BC9C5, 0x0837CB5AD29C99E1,
0x5CBA839AE1D999E1, 0x44EA7C9A6A91D1C5, 0xC7A2BCA96DE81140, 0x8F86F822252B2984,
0x434A34E11DEFAACC, 0x8F86F82DD1236600, 0x6305B035F567EF4C, 0x9CFA4915F0ECA704,
0x6CFAAB94B8352C48, 0x6CFA9BB0FCF2D3B7, 0x24C2BFE475BAD3B7, 0x681248AC459E9F3A,
0x4C46C5E425BADBB7, 0x68024EAC3531978F, 0xA04741E4F5B4DFFF, 0x6BCC08C4D1F856B7,
0x23088B8CE9AAA9F6, 0xEFC4474025666535, 0x03470F500132EC7D, 0xFCB8F79004B9A445,
0xFCB8F7B020FD630D, 0xD8FC7AFCF00A2B0D, 0x90FC7A7CF0B36A2D, 0x6FFCF134B8973EA0,
0xA33FC9F03BDF1EF0, 0x6FF3053CF713D23C, 0xA33FC9F03BDF1EF0, 0x6FF3053CF713D23C,
0x18FCFDBFBED25974, 0x39FBFDB23ECD5663, 0xCB70B54BB5850034, 0x082FEBEF464D8B7D,
0x07DCF19866B50834, 0x05889E972446025B, 0x0ACA6D9E5B49F1AB, 0xC606A15DAB48A5D4,
0x8ACC9A15A944289A, 0x08C3532EE08D6E95, 0x0AAC5CDDE08D6E59, 0x435C5EB18F822CAA,
0xC5535EB18F02D42B, 0x8C9AD5FD8F02D4BB, 0xC58A3C7EC60D3538, 0x048971AFED44FC13,
0x728971AF6DBC7D5A, 0x538E71A2EDA37229, 0x01E17E51E7CC7DDA, 0x0E125E0B88C38ECA,
0x681B2104EEF3ECA5, 0x31642E62FEA293AA, 0x3E971E0381ADF58A, 0x6EC5710C72EDBFE5,
0x01CA826C2882B016, 0x678ACB1327E4C074, 0x3EF5C47577B5BF7B, 0xBFBDB41408BAD91B,
0x7D3CFC1408BA59DA, 0xFDD47D5D08BA595A, 0xFD5485DC41BA595A, 0xF21C0891D5C9595A,
0x8D134A622528DA13, 0x6413356DD6D8DB7F, 0xA8DFF9A129272583, 0x6413356DE5EBE94F,
0x675AE446ADF9F940, 0xE4121457E9E9F688, 0x25E404BF6AA0E661, 0xA6ACCD3426B8926E,
0xA2BCC2FC36B7628F, 0x63378EF527B8239E, 0xA27E467E6A7808D2, 0x497F6F711B0C0F3B,
0x2F1909177D6A692D, 0x0E1E091A7DEE7622, 0x011720156DAF5F2D, 0x105B301A9DBE1B3D,
0x105B309A743F53DD, 0x70121995047E7AD2, 0x3C0216C5153A6ADD, 0x7D2B190CEA732ACC,
0x393B164CA35A259C, 0x361B0700B355158D, 0x393B4E29BC6554A4, 0x28375E26AC7410B4,
0xAB7E4E67857BBEC1, 0x63F503A6AD74C121, 0x059319D2A99D0068, 0x249419DFA9191F67,
0x2B84F05CE1180E68, 0xDBF139A3A8090A78, 0xCAFE3AD7A7E98931, 0x0632F614A6F88621,
0xCAFE3AD86A344AED, 0x0632F614A6F88621, 0xCAFE3AD86A344AED, 0x0632F614A6F88621,
0x8B7BA142F3240D6D, 0x8B7A91AE726CB506, 0xC31F61253B6D3E06, 0x48577964B025368D,
0x30DC31653B6D16C5, 0x371EB56AC4E85EE5, 0x4F9DFD6A4FA05EE5, 0x4F9DFADECBAF5EC5,
0x5FEE7393C3F4D78C, 0x2A3CF6494802E4C9, 0x8AA667DFC0BAAC8F, 0xB2822B5288313617,
0xFA80996AAC75BF5F, 0x6A1615E736FC1FE7, 0xCFFE55C372755776, 0xF7DA014E3A755771,
0x385149061E01DE3D, 0xF8D401F9E1F80DD5, 0xB0CC8AB1310708A1, 0x2C5C19228F8CB919,
0xA5142106C301F187, 0x2EAC69057139D5C3, 0x6632E38EFCAF7C59, 0xD4A15BC6BC8B38D0,
0x5DE96940311BAA4A, 0x5DE96E10D9538E0E, 0x29612A28FD070346, 0xD01FC2E7764F4C62,
0x9809B627F307B39D, 0x745C3B6FEB726818, 0x745C3C3703BAE350, 0xB45E843C77BB1BD3,
0x3C1B0D7408501BD3, 0xA68180CD83E1A39B, 0xA7E1A4710AAD3532, 0xEFD9803583E53532,
0x6249387DBBC179BF, 0xDD00A2CF285F9F39, 0x4F9A105CB6D514B4, 0x03D234183F9D1706,
0x03D4E3F07FB96B8F, 0x8B90DBD42B34238F, 0x8E78145F637F07FB, 0x980CD4DA2B80F802,
0xCD819CE35E5B7D4A, 0xCD87430B96D035BA, 0xCE3F6F7F9728B6BA, 0xAE1BD3F4DB28B67A,
0xFE3F4F7F9328B67B, 0xA61BFBF4DF28B67A, 0xA72B3F759728B67B, 0x2E63FC28C977B67B,
0xB4CE7799713F263E, 0x90B2FED5E796BDA0, 0x1DFAC6F1A31FF5E0, 0x9B775649EB27D1AC,
0xD374E4C35205425B, 0xD372AB2B1A2106D2, 0x5B36930F4EAC4ED2, 0x26DE5C8406E76AA6,
0x30AA9C014E18955E, 0x6527D41A3BC31016, 0x652183F2F34858EE, 0x61998D86F2B0DBEE,
0x9E6672F51BB0DB2E, 0x15D7CABDBBF55266, 0x989F56273065DFC9, 0xA0BB12AE785DFB85,
0x2D2DBB25C015F837, 0x0969326D538B72BC, 0x84F9A0F7E1333AFC, 0xCCDDE47EA99CD37A,
0x9850AC7EA9990892, 0xD01E880A21DD30B6, 0x98E177F22835FF3D, 0xED3AF2BA3E413FB8,
0x25B1BA466BCC77A3, 0x244939466BC9944B, 0xCD4939866D719A3F, 0x650CB0CE928E64C0,
0xF4963F7E193FDC88, 0xBCF61B3294775127, 0x04BE1980F45315AE, 0xA601030C78C9893E,
0xA377EB645C8D0076, 0xE717CF30D1C50076, 0x0FD84478BCE174FE, 0x7B18C130431E835A,
0xF650DA45989BCB4C, 0xF32E328D13D3CF19, 0x4B20468CEB50CF19, 0xB4DEDC65EB500F11,
0x056694DDAED947EE, 0x4DDC12433D43FC65, 0xFFC457CA755BB1E8, 0x744ECB50F2E3F9EA,
0x9C6E8ED9BA72697C, 0x843B0391BA726C68, 0x6CF488D99207E524, 0x63340D916DF81260,
0x26BD45916DFCD7E4, 0x2543C09EB6799F3C, 0x65CE8C8CFEF29F3C, 0xE4CE737301131E2E,
0xA8D90773C21611D7, 0x57FC0F33491E515A, 0x573F0A3C741EAEA5, 0x12B40A3C70922BAA,
0x74D24A18341B6346, 0x55D54A15349F7C49, 0x5E9D6AF7F5D74D46, 0x59628B763D5C0584,
0x5A2B8F97FC140584, 0x5AD47068D9158E4C, 0x3C0D05681A108171, 0x1D0A05651A949E7E,
0x16422587DBDCAF71, 0x11BDC6060357E7B3, 0x12F4C2E5C21FE7B3, 0xED0B3D07430C6C6B,
0x980BFE024CF6ED6B, 0xB02FBAC59D01A5BC, 0x9463338D9D01A5B8, 0x192B03A9D18CE980,
0x510F476E99B4CDCC, 0x19CF742B664B3233, 0x19CFF42B566F76F4, 0x6D46B873723BFBBC,
0x5D46985736FCA398, 0xD84698522714A398, 0x90B967AF439CAC58, 0x9001EAE71BB8E8D3,
0x1B4DD26E53B8E8C3, 0x3B4D12EF1AE0CC87, 0xBA057A9A93A4CC87, 0xF6057ABA9394E8EB,
0x374D4BB5F3B0AC62, 0xE746036604F88C80, 0x37754B1620BC01C8, 0x7FBFC05EC0F98C80,
0xF4F309D58CD96541, 0xB821FE9446EA2990, 0x8B64372349ABE1A3, 0x9B8CF66B8820A872,
0xDF4B4F224913E914, 0xD00FB0DDB6ECED30, 0x10B9BF1C85A43586, 0x145A7E55A564B6CE,
0x5A827D18A1847786, 0xADE4BFAFAE9C730B, 0x6CD7F7A7F6153ADB, 0x695ABFF7E655FD9A,
0x7DDDF34FAE854B95, 0x7D54BAF6E6D512B1, 0x55147CB7E51791F9, 0x851735B307D6D93A,
0xCD13D472CD60D67B, 0x0D3895428CED1C78, 0x452CD5CBCDF5F4FB, 0x4864F52B0CBD3670,
0x50247C6228B9F138, 0x5D6CBD41617B7A70, 0x7D2C3408655F3EB7, 0x822C10ACE81786FF,
0x3A6420ED615F7900, 0x3A6422CD45FBF448, 0xBD2C9A857DBA7D00, 0x346411CDE9F25904,
0xBF2C19A551BA1945, 0xF76D90EDD2F21905, 0x7A2554669AA2A14D, 0xB9359036DB6585E9,
0x40B5287ED9ECCD25, 0xC9FD0C525EA432DA, 0xC1118F1AE6EC3A98, 0xD1530652C2E8B3D0,
0x2FB322F64FA00B98, 0x97FB3AB4C6E8F467, 0x9FBBB7FCEE61C498, 0x8FB40FB4CE234DD0,
0x06FC2BF0DF2C7D90, 0x46EC24D8676455D2, 0x76AEAD9023755A92, 0x26EEBD9F1B51E2DA,
0x9EA685DD9219F3D5, 0x91C6C5CD9D51D791, 0xD9827C84DD135ED9, 0x54CBB0483CEC8F2E,
0x843CF9187665C325, 0x0374A13C32747B6D, 0xBB3CE97EBB3C7B2D, 0x77F025B277F0B7E1,
0xCFA19FFA6FB33EA8, 0x46E826B2904CC157, 0x0D616BBAD3C58C44, 0x4EE8269A804CC554,
0x0D616FAACBC5887C, 0x4EE822EA984CC144, 0x0D616BBAD3C58C0C, 0x59EC23DA804CC554,
0xD4A04B990901A570, 0x95D0001044318134, 0xD65949104431A18D, 0x5D5B0899A8742AF5,
0xDE1380D4213CDAB0, 0x22560BD660B5FA71, 0x0297889EF0F87339, 0x8BDF70DB7BFA32B0,
0xCA56501AF8B29AFD, 0xEE12D95204F711FF, 0xA39B913A417A59BF, 0x2AD3A91E0DF7111F,
0x2AD3AB66E5D7355B, 0xD52C51AD6DD8F5DE, 0x90A119DD499CDDD1, 0xB0A129F90D5B95B9,
0xBF910DBD801795B9, 0xFEC929E90D5F92A8, 0xB3E126E90D5F9011, 0xA2EE1ECD41D2D891,
0xADCE3A89C89AC8DE, 0xA2EE7D98C70A8DF6, 0xADDE3289C8AAC0DE, 0xA29E7598C71A85F6,
0xADCE3A89C8DAC8DE, 0x45AE7D98C70A8DF6, 0xCDA1BD1DC70A8FFA, 0xE9E5365538F575A5,
0xDAE3BF1DE8023DFD, 0x162F40E2124FD43D, 0x162F40E63A6B90FA, 0x62A60C861E271DB6,
0x2A9628D2936F2D92, 0x2A9608D2F34B6955, 0x2A9638D2D36F2D92, 0xA2C3C79A2CA6AEDA,
0x5D3C3D89A4A96E5F, 0x19B171B980E5E517, 0x19B171BB39A48533, 0x983C398B1DF0087B,
0xD03DB0C31DF0187B, 0xA019F4EB120FD1F8, 0xAF99B9C31D0FC0F7, 0xA009FCEB121F88E6,
0xAFA9B1C31D3FC8F7, 0xA019F4EB120F80E6, 0xAFD9B9C31D4FC0F7, 0xA009FCEB121F88E6,
0xE861B9665A7FC8F7, 0x4034462E7A5B8C7E, 0xBFCBBF8DF2544CFB, 0x6F3CF7BDD610C7B3,
0x96AD1E7DE5164EFB, 0x7F73B3BD3BAEB104, 0x7F728605C4514883, 0x7F72873500D00043,
0xB3BE4BF9C38D5E1C, 0x7F7287350F4192D0, 0xB3BE4BF9C38D5E1C, 0x7F7287350F4192D0,
0xBDC488227BBE5050, 0xBD84972DBABADD18, 0x3D7CD7A0F2AA2A50, 0x75BE61AF06DFD592,
0xB67F6D224E1EC165, 0x7AB3A1EE82D20DA9, 0xFFFB6065CE0086E5, 0x74FB60657784892C,
0x7F8ED8B4FCC8B42D, 0x7F8F60B675CCF5A6, 0xC697145F490FF5A6, 0xB2562F39490FD059,
0x89302F39F1476957, 0x31302F3978C26696, 0x31303F8078C26697, 0x10373F8DF8DD6997,
0xDA1C73457390B81C, 0xAEA4A2CE3FA9395D, 0x7F2FEECC03287B1B, 0xFC3F9ACE0FA535A3,
0x8A1F624DCF5A2562, 0x09DC9DB230A59DB5, 0x829D9CB6BBE39974, 0x6B4C543D7BC8DDA4,
0x2A9D7F3D7BC8DC1C, 0x6E955A398DC0A59D, 0xE55658B0C802E192, 0x135E213189E83042,
0xD2DDF17486E01546, 0xD2DDF0CC47CB59BA, 0x11CF798D57C818BA, 0xDD03B5419B0BD889,
0xCD523E0D937A27C1, 0xC8DF76499333AC89, 0x0C543E199333ACE5, 0xF3ABC799B79721AD,
0xFB4744D193BBA6E5, 0xDFE3C999B7BF2FAD, 0xF76AF9664840D14D, 0xC72AE96940005C05,
0x873AE64164444D0A, 0x9735DE652055424A, 0x987DFA21315A120A, 0xC059BE303E3A521A,
0x11AEF6743E7AD552, 0xDD623AB8F2B634AD, 0x11AEF6743E7AF861, 0xDD623AB8F2B634AD,
0x229DCAB8D612B9E5, 0xDD623AB8F2B634AD, 0xDD621B98D612B9E5, 0x562A8FD0F2163EAD,
0xD5628F90795E36C5, 0x19AE435CB59D2601, 0xD5628F907951EACD, 0x19AE435CB59D2601,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC,
0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC, 0xCCCCCCCCCCCCCCCC
};

const DECLSPEC_ALIGN(32) uint8_t _shellcode_Const[] = {
0x00, 0x00, 0x00, 0x00,                              //uint32_t unlocker_pid                        _shellcode_[0]
0x20, 0x90, 0x8C, 0x68,                              //uint32_t timestamp                           _shellcode_[4]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t unlocker_FpsValue_addr              _shellcode_[8]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Ptr_il2cpp_fps                      _shellcode_[0x10]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Ptr_Engine_fps                      _shellcode_[0x18]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t hksr_ui_ptr \ Hooked_funcstruct     _shellcode_[0x20]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t hksr_ui_type \ verfiy_func_ptr      _shellcode_[0x28]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Ptr_Function_link                   _shellcode_[0x30]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Ptr_struct_NtAPI                    _shellcode_[0x38]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	     //uint64_t PHooked_func_once                   _shellcode_[0x40]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t Pplat_flag                          _shellcode_[0x48]
//Xmmseg Hook_once_pattern                                                                          _shellcode_[0x50]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//Xmmseg org_part                                                                                   _shellcode_[0x60]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//Xmmseg hookedpart                                                                                 _shellcode_[0x70]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t API_MessageBoxA                     _shellcode_[0x80]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t API_CloseHandle                     _shellcode_[0x88]
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      //uint64_t API_GetForegroundWindow             _shellcode_[0x88]
//
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3                                               
0x55,                                                //push rbp
0x53,                                                //push rbx
0x56,                                                //push rsi
0x57,                                                //push rdi
0x41, 0x57,                                          //push r15
0x48, 0x83, 0xEC, 0x70,                              //sub rsp, 0x70
0x48, 0x8D, 0x6C, 0x24, 0x20,                        //lea rbp, qword [rsp+0x20] 
0x89,0xCA,                                           //mov edx, ecx
0xB9, 0xFF, 0xFF, 0x1F, 0x00,                        //mov ecx,1FFFFF
0x48, 0xE8, 0xA4, 0x03, 0x00, 0x00,                  //call API_OpenProcess
0x49, 0x89, 0xC7,           			             //mov r15, rax
0x48, 0x85, 0xC0,               	                 //test rax, rax
0x74, 0x60,             				             //jz return
0x44, 0x48, 0x8B, 0x3D, 0x3C, 0xFF, 0xFF, 0xFF,      //mov rdi, qword[unlocker_FpsValue_addr]
0x4D, 0x31, 0xF6,                                    //xor r14, r14 
0xBB, 0xF4, 0x01, 0x00, 0x00,                        //mov ebx, 0x1F4        (500ms)
0x44, 0x48, 0x8D, 0x35, 0x04, 0x00, 0x00, 0x00,      //lea rsi, qword:[Read_tar_fps]
0x48, 0x89, 0x5D, 0x08,                              //mov qword[rbp+0x8], rbx
//Read_tar_fps                                       
0x4C, 0x8D, 0x44, 0x24, 0x28,                        //lea r8, qword:[RSP+0x28]        
0x4C, 0x89, 0x74, 0x24, 0x20,                        //mov qword ptr ss:[rsp+20],r14
0x41, 0xB9, 0x04, 0x00, 0x00, 0x00,                  //mov r9d, 0x4  
0x48, 0x89, 0xFA,                                    //mov rdx, rdi  
0x4C, 0x89, 0xF9,                                    //mov rcx, r15  
0x48, 0xE8, 0xE4, 0x03, 0x00, 0x00,                  //call API_ReadProcessmem
0x85, 0xC0,                                          //test eax, eax     
0x75, 0x10,                                          //jnz continue   
//read fail                                          
0x48, 0x83, 0xC6, 0x30,                              //add r15, 0x30         //    ѭ    Χ
0x4C, 0x89, 0xF9,                                    //mov rcx, r15
0xE8, 0x74, 0x00, 0x00, 0x00,                        //call Show Errormsg and CloseHandle 
0x0F, 0x1F, 0x40, 0x00,                              //nop
//continue                                           
0x8B, 0x4C, 0x24, 0x28,                              //mov ecx, qword:[RSP+0x28]      
0x48, 0xE8, 0x16, 0x00, 0x00, 0x00,                  //call Sync_auto
0x89, 0xD9,                                          //mov ecx, ebx
0x48, 0xE8, 0xFE, 0x03, 0x00, 0x00,                  //call API_Sleep
0xFF, 0xE6,                                          //jmp rsi
//return                                             
0x48, 0x83, 0xC4, 0x70,                              //add rsp, 0x70
0x41, 0x5F,                                          //pop r15
0x5F,                                                //pop rdi
0x5E,                                                //pop rsi
0x5B,                                                //pop rbx
0x5D,                                                //pop rbp
0xC3, 											     //ret
//int3
0xCC,
//int3                                               
0x48, 0x83, 0xEC, 0x38,                              //sub rsp, 0x38
0x44, 0x48, 0x8B, 0x05, 0xD4, 0xFE, 0xFF, 0xFF,      //mov rax, qword ptr [Ptr_il2cpp_fps]
0x48, 0x85, 0xC0,                                    //test rax, rax
0x74, 0x1B,                                          //jz continue
0x2E, 0x8B, 0x00,                                    //mov eax, dword ptr ds:[rax]
0x83, 0xF8, 0x1E,                                    //cmp eax, 0x1E
0x74, 0x0D,                                          //jz equ30
0x83, 0xF8, 0x2D,                                    //cmp eax, 0x2D
0x74, 0x0E,                                          //jz noil2cppPtr
0x2E, 0xB9, 0xE8, 0x03, 0x00, 0x00,                  //mov ecx, 0x3E8 //equ60
0xEB, 0x06,                                          //jmp continue
//equ30
0x2E, 0xB9, 0x3C, 0x00, 0x00, 0x00,                  //mov ecx, 0x3C
//continue
0x48, 0x8B, 0x05, 0xCD, 0xFE, 0xFF, 0xFF,            //mov rax, qword ptr [Ptr_Function_link]
0x48, 0x85, 0xC0,                                    //test rax, rax
0x74, 0x04,                                          //jz noExtfunc
0xFF, 0xD0,                                          //call rax
0x89, 0xC1,                                          //mov ecx, eax
//noExtfunc
0x44, 0x48, 0x8B, 0x05, 0xA4, 0xFE, 0xFF, 0xFF,      //mov rax, qword ptr [Ptr_Engine_fps]
0x89, 0x08,                                          //mov dword ptr [rax], ecx
0x48, 0x83, 0xC4, 0x38,                              //add rsp, 0x38
0xC3,                                                //ret
0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3    
0x48, 0x83, 0xEC, 0x68, 							        //sub rsp, 0x68                   
0xFF, 0x15, 0xFE, 0xFE, 0xFF, 0xFF, 			            //call [API_closehandle]
0x31, 0xC9,										            //xor ecx, ecx
0x3E, 0x48, 0x8D, 0x54, 0x24, 0x20,                         //lea rdx, [rsp+0x20]             
0x4C, 0x8D, 0x42, 0x10, 							        //lea r8, [rsp+0x10]              
0x48, 0xB8, 0x53, 0x79, 0x6E, 0x63, 0x20, 0x66, 0x61, 0x69, //mov rax, 'Sync fai'      
0x48, 0xC7, 0x42, 0x08, 0x6C, 0x65, 0x64, 0x21,             //mov qword ptr [rdx+8], 'led!'   
0x48, 0x89, 0x42, 0x00,                                     //mov qword ptr [rdx], rax        
0x41, 0xC7, 0x00, 0x45, 0x72, 0x72, 0x6F,                   //mov dword ptr [r8], 'Error'     
0x66, 0x41, 0xC7, 0x40, 0x04, 0x72, 0x00,                   //mov word ptr [r8+4], '!'        
0x41, 0xB9, 0x10, 0x00, 0x00, 0x00, 		                //mov r9d, 0x10 (MB_OK)
0xFF, 0x15, 0xBA, 0xFE, 0xFF, 0xFF, 			            //call [API_MessageBoxA]          
0x48, 0x83, 0xC4, 0x68,                                     //add rsp, 0x68
0xC3, 											            //ret
0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3 
0x40, 0x53,                                                 //push rbx                     //entry
0x48, 0x83, 0xEC, 0x60, 							        //sub rsp, 0x60
0x4C, 0x48, 0x8D, 0x1D, 0x22, 0xFE, 0xFF, 0xFF, 	        //lea rbx, [code_block]
0x48, 0x8D, 0x4B, 0x38, 							        //lea rcx, [rbx+0x38]//ntapi_struct
0xC7, 0x01, 0x60, 0x00, 0x00, 0x00,                         //mov dword ptr [rcx], 0x60
0x31, 0xD2,                                                 //xor edx, edx
0x49, 0x89, 0xC8, 								            //mov r8, rcx
0xE8, 0x2E, 0x05, 0x00, 0x00, 					            //call Init_NtAPI
0x85, 0xC0, 							        			//test eax, eax
0x75, 0x1C, 							        			//jnz exit
0x48, 0x89, 0xD9,   					                    //mov rcx, rbx
0xBA, 0x00, 0x40, 0x00, 0x00,   		                    //mov edx, 0x4000
0x41, 0xB8, 0x20, 0x00, 0x00, 0x00, 				        //mov r8d, 0x20
0x44, 0xE8, 0xF6, 0x01, 0x00, 0x00, 				        //call API_VirtualProtect
0x8B, 0x0B,                  			                    //mov ecx, [rbx]
0xE8, 0x8F, 0xFE, 0xFF, 0xFF, 					            //call main_sync_start
0x90,
0x48, 0x83, 0xC4, 0x60, 							        //add rsp, 0x60
0x5B,                                                       //pop rbx
0xC3, 												        //ret
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//hksr_setui_fptr_start
0x4C, 0x48, 0x8B, 0x05, 0xF8, 0xFD, 0xFF, 0xFF,
0x40, 0x49, 0x89, 0xC8,
0x8B, 0x0D, 0xF6, 0xFD, 0xFF, 0xFF,
0x89, 0x08,
0x4C, 0x89, 0xC1,
0xE9, 0x24, 0x03, 0x00, 0x00,
//int3
0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x53, 0x55, 0x56, 0x57, 							    //push rbx,rbp,rsi,rdi      //GI_UI_UnHook_once
0x48, 0x83, 0xEC, 0x48, 							    //sub rsp, 0x48
0x48, 0x48, 0x8B, 0x1D, 0xF0, 0xFD, 0xFF, 0xFF,         //mov rbx, [PHooked_func_once]
0x48, 0x8D, 0xAC, 0x24, 0x28, 0x00, 0x00, 0x00,         //lea rbp, [rsp + 0x28]
0x48, 0x89, 0x4D, 0x08,                                 //mov [rbp + 8], rcx
0x48, 0x89, 0x55, 0x10,         			            //mov [rbp + 0x10], rdx
0x4C, 0x89, 0x45, 0x18,             	                //mov [rbp + 0x18], r8
0x4C, 0x89, 0x4D, 0x20,             	                //mov [rbp + 0x20], r9
0x48, 0x89, 0xD9,       					            //mov rcx, rbx
0xE8, 0x70, 0x01, 0x00, 0x00,            		        //call mem_protect_RXW
0xF3, 0x0F, 0x6F, 0x05, 0xD8, 0xFD, 0xFF, 0xFF,         //movdqa xmm0, [Hook_once_pattern]
0xF3, 0x0F, 0x7F, 0x03,             	                //movdqa [rbx], xmm0
0x48, 0x89, 0xD9,       						        //mov rcx, rbx
0xE8, 0x6C, 0x01, 0x00, 0x00,       		 		    //call mem_protect_RX
0x48, 0x8B, 0x4D, 0x08,                            	    //mov rcx, [rbp + 8]
0x48, 0x8B, 0x55, 0x10,             	 	            //mov rdx, [rbp + 0x10] 
0xFF, 0xD3,             				                //call rbx
0x48, 0x96,             				                //xchg rax, rsi
0x4C, 0x48, 0x8B, 0x3D, 0xB0, 0xFD, 0xFF, 0xFF,         //mov rdi, [Pplat_flag]
0x48, 0x89, 0xF9,       						        //mov rcx, rdi
0xE8, 0x40, 0x01, 0x00, 0x00,        		            //call mem_protect_RXW
0xC7, 0x07, 0x02, 0x00, 0x00, 0x00,                     //mov dword ptr [rdi], 2
0x48, 0x89, 0xF9,                       				//mov rcx, rdi
0xE8, 0x42, 0x01, 0x00, 0x00,       		 		    //call mem_protect_RX
0x48, 0x96,             				                //xchg rax, rsi
0x48, 0x83, 0xC4, 0x48,             	 	        	//add rsp, 0x48
0x5F, 0x5E, 0x5D, 0x5B,     					        //pop rdi, rsi, rbp, rbx
0xC3,               				 	                //ret
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x41, 0x57, 0x41, 0x56, 0x41, 0x55, 0x41, 0x54,                    //push r15,r14,r13,r12                 //hooked_func VA + 0x200
0x53, 0x55, 0x56, 0x57,                                            //push rbx,rbp,rsi,rdi   
0x48, 0x83, 0xEC, 0x68,                                            //sub rsp, 0x68
0x44, 0x48, 0x8B, 0x35, 0x38, 0xFD, 0xFF, 0xFF,                    //mov rsi, [Hooked_funcstruct]
0x40, 0x48, 0x8B, 0x1D, 0x38, 0xFD, 0xFF, 0xFF,                    //mov rbx, [verfiy_func_ptr]
0x48, 0x8D, 0xAC, 0x24, 0x28, 0x00, 0x00, 0x00,                    //lea rbp, [rsp + 0x28]
0x48, 0x89, 0x4D, 0x08,                                            //mov [rbp + 8], rcx
0x48, 0x89, 0x55, 0x10,							                   //mov [rbp + 0x10], rdx  
0x4C, 0x89, 0x45, 0x18, 						                   //mov [rbp + 0x18], r8
0x4C, 0x89, 0x4D, 0x20, 						                   //mov [rbp + 0x20], r9
0x4C, 0x48, 0x8D, 0x3D, 0xD0, 0x00, 0x00, 0x00,                    //lea rdi, [mem_protect_RXW]
0x4D, 0x31, 0xE4, 								                   //xor r12, r12
0x66,0x66,0x66,0x66,0x66,0x0F,0x1F,0x84,0x00,0x00,0x00,0x00,0x00,  //nop
0x4E, 0x8D, 0x2C, 0x26, 							               //lea r13, [rsi + r12]
0x49, 0x8B, 0x4D, 0x00, 							               //mov rcx, [r13]
0x49, 0x89, 0xCE, 								                   //mov r14, rcx
0x48, 0x85, 0xC9, 								                   //test rcx, rcx
0x74, 0x18, 										               //jz break
0xFF, 0xD7, 									                   //call rdi
0x85, 0xC0, 										               //test eax, eax
0x74, 0x0C, 										               //jz skip
0xF3, 0x41, 0x0F, 0x6F, 0x45, 0x20, 				               //movdqu xmm0, [r13 + 0x20]
0xF3, 0x41, 0x0F, 0x7F, 0x46, 0x00, 				               //movdqu [r14], xmm0
0x49, 0x83, 0xC4, 0x30, 							               //add r12, 0x30
0xEB, 0xD8, 										               //jmp continue
0x48, 0x89, 0xD9, 								                   //mov rcx, rbx
0xE8, 0x90, 0x00, 0x00, 0x00,   			                       //call mem_protect_RXW
0x48, 0x8B, 0x4D, 0x08, 						                   //mov rcx, [rbp + 8]
0x48, 0x8B, 0x55, 0x10, 						                   //mov rdx, [rbp + 0x10]
0x4C, 0x8B, 0x45, 0x18,     		                               //mov r8, [rbp + 0x18]
0x4C, 0x8B, 0x4D, 0x20,     	                                   //mov r9, [rbp + 0x20]
0xF3, 0x0F, 0x6F, 0x05, 0xF8, 0xFC, 0xFF, 0xFF,	                   //movdqu xmm0, [org_pattern]
0xF3, 0x0F, 0x7F, 0x03, 							               //movdqu [rbx], xmm0
0xFF, 0xD3, 										               //call rbx
0x49, 0x97, 										               //xchg r15, rax
0xF3, 0x0F, 0x6F, 0x05, 0xF8, 0xFC, 0xFF, 0xFF, 				   //movdqu xmm0, [Hooked_pattern]
0xF3, 0x0F, 0x7F, 0x03, 							               //movdqu [rbx], xmm0
0x4C, 0x48, 0x8D, 0x3D, 0x6C, 0x00, 0x00, 0x00,                    //lea rdi, [mem_protect_RX]
0x4D, 0x31, 0xE4, 								                   //xor r12, r12
0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,		       //nop
0x4E, 0x8D, 0x2C, 0x26, 							               //lea r13, [rsi + r12]
0x49, 0x8B, 0x4D, 0x00, 							               //mov rcx, [r13]
0x49, 0x89, 0xCE, 								                   //mov r14, rcx
0x48, 0x85, 0xC9, 								                   //test rcx, rcx
0x74, 0x14, 										               //jz break
0xF3, 0x41, 0x0F, 0x6F, 0x45, 0x10, 				               //movdqu xmm0, [r13 + 0x10]
0xF3, 0x41, 0x0F, 0x7F, 0x46, 0x00, 				               //movdqu [r14], xmm0
0xFF, 0xD7, 									                   //call rdi
0x49, 0x83, 0xC4, 0x30, 							               //add r12, 0x30
0xEB, 0xDC, 										               //jmp continue
0x48, 0x89, 0xD9, 								                   //mov rcx, rbx
0x48, 0xFF, 0xD7,             			                           //call rdi
0x49, 0x97, 										               //xchg r15, rax
0x48, 0x83, 0xC4, 0x68, 							               //add rsp, 0x68
0x5F, 0x5E, 0x5D, 0x5B,                                            //pop rdi, rsi, rbp, rbx,
0x41, 0x5C, 0x41, 0x5D, 0x41, 0x5E, 0x41, 0x5F,	                   //pop r15,r14,r13,r12
0xC3,                                                              //ret
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC,
//int3
0x41, 0xB8, 0x40, 0x00, 0x00, 0x00,    //Protect_RXW
0xBA, 0x00, 0x20, 0x00, 0x00,
0xE9, 0x10, 0x00, 0x00, 0x00,
0x41, 0xB8, 0x20, 0x00, 0x00, 0x00,    //Protect_RX
0xBA, 0x00, 0x20, 0x00, 0x00,
0xE9, 0x00, 0x00, 0x00, 0x00,
//Virtualprotect
0x48, 0x89, 0x54, 0x24, 0x18,
0x48, 0x83, 0xEC, 0x48,
0x4C, 0x8B, 0x15, 0x28, 0xFC, 0xFF, 0xFF,
0x49, 0xF7, 0xD2,
0xC7, 0x44, 0x24, 0x70, 0x00, 0x00, 0x00, 0x00,
0x45, 0x89, 0xC1,
0x4C, 0x8D, 0x44, 0x24, 0x60,
0x48, 0x81, 0xE1, 0x00, 0xF0, 0xFF, 0xFF,
0x48, 0x89, 0x4C, 0x24, 0x30,
0x48, 0x8D, 0x54, 0x24, 0x30,
0x4D, 0x8B, 0x52, 0x00,
0x48, 0x8D, 0x44, 0x24, 0x70,
0x48, 0x89, 0x44, 0x24, 0x20,
0x48, 0x83, 0xC9, 0xFF,
0x41, 0xFF, 0x52, 0x38,
0x85, 0xC0,
0x74, 0x08,
0x31, 0xC0,
0x48, 0x83, 0xC4, 0x48,
0xC3,
0xCC,
0xFF, 0xC0,
0x48, 0x83, 0xC4, 0x48,
0xC3,
//int3
0xCC, 0xCC, 0xCC,
//API_Openprocess
0x48, 0x83, 0xEC, 0x68,
0x4C, 0x8B, 0x05, 0xCD, 0xFB, 0xFF, 0xFF,
0x48, 0x33, 0xC0,
0x4C, 0x8D, 0x4C, 0x24, 0x20,
0x48, 0x89, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,
0x0F, 0x57, 0xC0,
0x48, 0x89, 0x44, 0x24, 0x28,
0x49, 0xF7, 0xD0,
0x8B, 0xC2,
0x8B, 0xD1,
0x0F, 0x11, 0x44, 0x24, 0x30,
0x48, 0x89, 0x44, 0x24, 0x20,
0x48, 0x8D, 0x8C, 0x24, 0x80, 0x00, 0x00, 0x00,
0x0F, 0x11, 0x44, 0x24, 0x40,
0xC7, 0x44, 0x24, 0x30, 0x30, 0x00, 0x00, 0x00,
0x0F, 0x11, 0x44, 0x24, 0x50,
0xC7, 0x44, 0x24, 0x48, 0x02, 0x00, 0x00, 0x00,
0x49, 0x8B, 0x00,
0x4C, 0x8D, 0x44, 0x24, 0x30,
0xFF, 0x90, 0x48, 0x00, 0x00, 0x00,
0x85, 0xC0,
0x74, 0x08,
0x33, 0xC0,
0x48, 0x83, 0xC4, 0x68,
0xC3,
0xCC,
0x48, 0x8B, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,
0x48, 0x83, 0xC4, 0x68,
0xC3,
//int3
0xCC, 0xCC, 0xCC,
//int3
0x48, 0x83, 0xEC, 0x38,                     //API_ReadProcessmem
0x48, 0x8B, 0x05, 0x4D, 0xFB, 0xFF, 0xFF,
0x48, 0xF7, 0xD0,
0x48, 0x8B, 0x00,
0x4C, 0x8B, 0x50, 0x30,
0x48, 0x8D, 0x44, 0x24, 0x60,
0x48, 0x89, 0x44, 0x24, 0x20,
0x41, 0xFF, 0xD2,
0x85, 0xC0,
0x74, 0x08,
0x31, 0xC0,
0x48, 0x83, 0xC4, 0x38,
0xC3,
0xCC,
0xFF, 0xC0,
0x48, 0x83, 0xC4, 0x38,
0xC3,
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x40, 0x53,                                 //API_Sleep
0x48, 0x83, 0xEC, 0x20,
0x48, 0x8B, 0x15, 0x0B, 0xFB, 0xFF, 0xFF,
0x8B, 0xD9,
0x48, 0x69, 0xCB, 0xF0, 0xD8, 0xFF, 0xFF,
0x48, 0xF7, 0xD2,
0x48, 0x8B, 0x12,
0x48, 0x89, 0x4C, 0x24, 0x38,
0x33, 0xC9,
0x48, 0x8B, 0x42, 0x68,
0x48, 0x8D, 0x54, 0x24, 0x38,
0xFF, 0xD0,
0x48, 0x83, 0xC4, 0x20,
0x5B,
0xC3,
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x40, 0x53,                                 //PowerSaveSet
0x48, 0x83, 0xEC, 0x38,
0x89, 0xCB,
0xFF, 0x15, 0x22, 0xFB, 0xFF, 0xFF,
0x48, 0xB9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x48, 0x39, 0x01,
0xB8, 0x0A, 0x00, 0x00, 0x00,
0x2E, 0x0F, 0x44, 0xC3,
0x48, 0x83, 0xC4, 0x38,
0x5B,
0xC3,
//int3
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//int3
0x48, 0x89, 0x74, 0x24, 0x20,               //getprocaddr
0x57,
0x41, 0x55,
0x41, 0x56,
0x41, 0x57,
0x48, 0x8B, 0xF2,
0x4C, 0x8B, 0xC9,
0x48, 0x85, 0xC9,
0x0F, 0x84, 0x43, 0x01, 0x00, 0x00,
0x48, 0x85, 0xD2,
0x0F, 0x84, 0x3A, 0x01, 0x00, 0x00,
0xB8, 0x4D, 0x5A, 0x00, 0x00,
0x66, 0x39, 0x01,
0x0F, 0x85, 0x2C, 0x01, 0x00, 0x00,
0x8B, 0x41, 0x3C, 0x81, 0x3C, 0x08, 0x50, 0x45, 0x00, 0x00, 0x0F, 0x85, 0x1C, 0x01,
0x00, 0x00, 0x44, 0x8B, 0xBC, 0x08, 0x88, 0x00, 0x00, 0x00, 0x45, 0x85, 0xFF, 0x0F, 0x84, 0x0B,
0x01, 0x00, 0x00, 0x44, 0x8B, 0xAC, 0x08, 0x8C, 0x00, 0x00, 0x00, 0x41, 0xBE, 0xFF, 0xFF, 0xFF,
0xFF, 0x4A, 0x8D, 0x3C, 0x39, 0x48, 0x81, 0xFA, 0xFF, 0xFF, 0x00, 0x00, 0x77, 0x1A, 0x2B, 0x77,
0x10, 0x3B, 0x77, 0x14, 0x0F, 0x83, 0xE4, 0x00, 0x00, 0x00, 0x8B, 0x47, 0x1C, 0x48, 0x03, 0xC1,
0x8B, 0x14, 0xB0, 0xE9, 0xB3, 0x00, 0x00, 0x00, 0x44, 0x8B, 0x57, 0x18, 0x45, 0x85, 0xD2, 0x0F,
0x84, 0x94, 0x00, 0x00, 0x00, 0x4C, 0x89, 0x64, 0x24, 0x38, 0x45, 0x33, 0xDB, 0x44, 0x8B, 0x67,
0x20, 0x4D, 0x03, 0xE1, 0x41, 0x83, 0xEA, 0x01, 0x78, 0x7A, 0x48, 0x89, 0x5C, 0x24, 0x28, 0x48,
0x89, 0x6C, 0x24, 0x30, 0x66, 0x66, 0x66, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
0x43, 0x8D, 0x1C, 0x1A, 0x4C, 0x8B, 0xC6, 0xD1, 0xFB, 0x41, 0x8B, 0x04, 0x9C, 0x49, 0x03, 0xC1,
0x4C, 0x2B, 0xC0, 0x66, 0x66, 0x66, 0x66, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
0x41, 0x0F, 0xB6, 0x0C, 0x00, 0x0F, 0xB6, 0x10, 0x48, 0x8D, 0x40, 0x01, 0x84, 0xC9, 0x74, 0x04,
0x3A, 0xCA, 0x74, 0xEC, 0x3A, 0xCA, 0x73, 0x06, 0x44, 0x8D, 0x53, 0xFF, 0xEB, 0x17, 0x76, 0x06,
0x44, 0x8D, 0x5B, 0x01, 0xEB, 0x0F, 0x8B, 0x4F, 0x24, 0x45, 0x8D, 0x5A, 0x01, 0x49, 0x03, 0xC9,
0x44, 0x0F, 0xB7, 0x34, 0x59, 0x45, 0x3B, 0xDA, 0x7E, 0xA6, 0x48, 0x8B, 0x6C, 0x24, 0x30, 0x48,
0x8B, 0x5C, 0x24, 0x28, 0x4C, 0x8B, 0x64, 0x24, 0x38, 0x44, 0x3B, 0x77, 0x14, 0x73, 0x2F, 0x8B,
0x47, 0x1C, 0x49, 0x03, 0xC1, 0x41, 0x8B, 0xCE, 0x8B, 0x14, 0x88, 0x85, 0xD2, 0x74, 0x1F, 0x41,
0x3B, 0xD7, 0x72, 0x08, 0x43, 0x8D, 0x04, 0x2F,
0x3B, 0xD0,
0x72, 0x12,
0x8B, 0xC2,
0x49, 0x03, 0xC1,
0x48, 0x8B, 0x74, 0x24, 0x40,
0x41, 0x5F,
0x41, 0x5E,
0x41, 0x5D,
0x5F,
0xC3,
0x48, 0x8B, 0x74, 0x24, 0x40,
0x33, 0xC0,
0x41, 0x5F,
0x41, 0x5E,
0x41, 0x5D,
0x5F,
0xC3,
//getprocaddr_end
0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//Init_NtAPI
0x4C, 0x8B, 0xDC, 0x55, 0x56, 0x57, 0x49, 0x8D, 0x6B, 0xB8, 0x48, 0x81, 0xEC, 0x30, 0x01, 0x00,
0x00, 0x8B, 0x01, 0x49, 0x8B, 0xF0, 0x65, 0x48, 0x8B, 0x08, 0x48, 0x8B, 0x41, 0x18, 0x48, 0x8B,
0x48, 0x20, 0x48, 0x8B, 0x01, 0x48, 0x8B, 0x78, 0x20, 0x48, 0x85, 0xFF, 0x0F, 0x84, 0xC2, 0x07,
0x00, 0x00, 0x48, 0x8B, 0x00, 0x48, 0x83, 0x78, 0x20, 0x00, 0x0F, 0x84, 0xB4, 0x07, 0x00, 0x00,
0x49, 0x89, 0x5B, 0x08, 0x4D, 0x89, 0x73, 0x10, 0x45, 0x33, 0xF6, 0x8B, 0xDA, 0x85, 0xD2, 0x75,
0x46, 0x48, 0xB8, 0x88, 0x96, 0x91, 0x9A, 0xA0, 0x98, 0x9A, 0x8B, 0x48, 0x8D, 0x4C, 0x24, 0x38,
0x48, 0x89, 0x44, 0x24, 0x38, 0xB2, 0x02, 0x48, 0xB8, 0xA0, 0x89, 0x9A, 0x8D, 0x8C, 0x96, 0x90,
0x91, 0x48, 0x89, 0x44, 0x24, 0x40, 0xE8, 0xA5, 0x07, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x38,
0x4C, 0x89, 0x74, 0x24, 0x48, 0x48, 0x8B, 0xCF, 0xE8, 0xF3, 0xFD, 0xFF, 0xFF, 0x48, 0x85, 0xC0,
0x74, 0x05, 0xFF, 0xD0, 0x48, 0x8B, 0x18, 0x48, 0xB8, 0xB1, 0x8B, 0xBE, 0x93, 0x93, 0x90, 0x9C,
0x9E, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x48, 0x89, 0x44, 0x24, 0x38, 0xB2, 0x03, 0x48, 0xB8, 0x8B,
0x9A, 0xA9, 0x96, 0x8D, 0x8B, 0x8A, 0x9E, 0x48, 0x89, 0x44, 0x24, 0x40, 0x48, 0xB8, 0x93, 0xB2,
0x9A, 0x92, 0x90, 0x8D, 0x86, 0x32, 0x48, 0x89, 0x44, 0x24, 0x48, 0xE8, 0x50, 0x07, 0x00, 0x00,
0x48, 0x8D, 0x54, 0x24, 0x38, 0x44, 0x88, 0x74, 0x24, 0x4F, 0x48, 0x8B, 0xCF, 0xE8, 0x9E, 0xFD,
0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74, 0x16, 0x48, 0x85, 0xDB, 0x75, 0x18, 0x48, 0x8D, 0x55, 0xEC,
0x48, 0x8B, 0xC8, 0xE8, 0x58, 0x07, 0x00, 0x00, 0x83, 0xF8, 0x01, 0x74, 0x0B, 0xB8, 0x02, 0xC0,
0x00, 0x00, 0xEB, 0x7F, 0x48, 0x89, 0x45, 0x88, 0x48, 0xB8, 0xB1, 0x8B, 0xB9, 0x8D, 0x9A, 0x9A,
0xA9, 0x96, 0x4C, 0x89, 0xBC, 0x24, 0x60, 0x01, 0x00, 0x00, 0x48, 0x89, 0x44, 0x24, 0x38, 0x48,
0x8D, 0x4C, 0x24, 0x38, 0x48, 0xB8, 0x90, 0x8D, 0x86, 0xE6, 0x9E, 0x93, 0xB2, 0x9A, 0x49, 0xBF,
0x8D, 0x8B, 0x8A, 0x9E, 0x93, 0xB2, 0x9A, 0x92, 0xB2, 0x03, 0x48, 0x89, 0x44, 0x24, 0x48, 0x4C,
0x89, 0x7C, 0x24, 0x40, 0xE8, 0xD7, 0x06, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x38, 0x44, 0x88,
0x74, 0x24, 0x4B, 0x48, 0x8B, 0xCF, 0xE8, 0x25, 0xFD, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74, 0x16,
0x48, 0x85, 0xDB, 0x75, 0x39, 0x48, 0x8D, 0x55, 0xF0, 0x48, 0x8B, 0xC8, 0xE8, 0xDF, 0x06, 0x00,
0x00, 0x83, 0xF8, 0x01, 0x74, 0x2C, 0xB8, 0x03, 0xC0, 0x00, 0x00, 0x4C, 0x8B, 0xBC, 0x24, 0x60,
0x01, 0x00, 0x00, 0x48, 0x8B, 0x9C, 0x24, 0x50, 0x01, 0x00, 0x00, 0x4C, 0x8B, 0xB4, 0x24, 0x58,
0x01, 0x00, 0x00, 0x48, 0x81, 0xC4, 0x30, 0x01, 0x00, 0x00, 0x5F, 0x5E, 0x5D, 0xC3, 0x48, 0x89,
0x45, 0x90, 0x48, 0xB8, 0xB1, 0x8B, 0xAD, 0x9A, 0x9E, 0x9B, 0xA9, 0x96, 0x4C, 0x89, 0x7C, 0x24,
0x40, 0x48, 0x89, 0x44, 0x24, 0x38, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x48, 0xB8, 0x90, 0x8D, 0x86,
0xF7, 0x93, 0x22, 0xB9, 0x8A, 0xB2, 0x03, 0x48, 0x89, 0x44, 0x24, 0x48, 0xE8, 0x4F, 0x06, 0x00,
0x00, 0x48, 0x8D, 0x54, 0x24, 0x38, 0x44, 0x88, 0x74, 0x24, 0x4B, 0x48, 0x8B, 0xCF, 0xE8, 0x9D,
0xFC, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74, 0x16, 0x48, 0x85, 0xDB, 0x75, 0x1B, 0x48, 0x8D, 0x55,
0xF8, 0x48, 0x8B, 0xC8, 0xE8, 0x57, 0x06, 0x00, 0x00, 0x83, 0xF8, 0x01, 0x74, 0x0E, 0xB8, 0x04,
0xC0, 0x00, 0x00, 0xE9, 0x73, 0xFF, 0xFF, 0xFF, 0x48, 0x89, 0x45, 0xA0, 0x48, 0xB8, 0xB1, 0x8B,
0xAF, 0x8D, 0x90, 0x8B, 0x9A, 0x9C, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x48, 0x89, 0x44, 0x24, 0x38,
0xB2, 0x03, 0x48, 0xB8, 0x8B, 0xA9, 0x96, 0x8D, 0x8B, 0x8A, 0x9E, 0x93, 0x48, 0x89, 0x44, 0x24,
0x40, 0x48, 0xB8, 0xB2, 0x9A, 0x92, 0x90, 0x8D, 0x86, 0xE9, 0xAF, 0x48, 0x89, 0x44, 0x24, 0x48,
0xE8, 0xDB, 0x05, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x38, 0x44, 0x88, 0x74, 0x24, 0x4E, 0x48,
0x8B, 0xCF, 0xE8, 0x29, 0xFC, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74, 0x16, 0x48, 0x85, 0xDB, 0x75,
0x1B, 0x48, 0x8D, 0x55, 0xFC, 0x48, 0x8B, 0xC8, 0xE8, 0xE3, 0x05, 0x00, 0x00, 0x83, 0xF8, 0x01,
0x74, 0x0E, 0xB8, 0x06, 0xC0, 0x00, 0x00, 0xE9, 0xFF, 0xFE, 0xFF, 0xFF, 0x48, 0x89, 0x45, 0xA8,
0x48, 0xB8, 0xB1, 0x8B, 0xB0, 0x8F, 0x9A, 0x91, 0xAF, 0x8D, 0x48, 0x8D, 0x4C, 0x24, 0x60, 0x48,
0x89, 0x44, 0x24, 0x60, 0xB2, 0x02, 0x48, 0xB8, 0x90, 0x9C, 0x9A, 0x8C, 0x8C, 0x1A, 0xBF, 0xA2,
0x48, 0x89, 0x44, 0x24, 0x68, 0xE8, 0x76, 0x05, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x60, 0x44,
0x88, 0x74, 0x24, 0x6D, 0x48, 0x8B, 0xCF, 0xE8, 0xC4, 0xFB, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x74,
0x16, 0x48, 0x85, 0xDB, 0x75, 0x1B, 0x48, 0x8D, 0x55, 0x04, 0x48, 0x8B, 0xC8, 0xE8, 0x7E, 0x05,
0x00, 0x00, 0x83, 0xF8, 0x01, 0x74, 0x0E, 0xB8, 0x08, 0xC0, 0x00, 0x00, 0xE9, 0x9A, 0xFE, 0xFF,
0xFF, 0x48, 0x89, 0x45, 0xB8, 0x48, 0xB8, 0xB1, 0x8B, 0xBB, 0x9A, 0x93, 0x9E, 0x86, 0xBA, 0x48,
0x8D, 0x4D, 0x18, 0x48, 0x89, 0x45, 0x18, 0xB2, 0x02, 0x48, 0xB8, 0x87, 0x9A, 0x9C, 0x8A, 0x8B,
0x96, 0x90, 0x91, 0x48, 0x89, 0x45, 0x20, 0xE8, 0x14, 0x05, 0x00, 0x00, 0x48, 0x8D, 0x55, 0x18,
0x4C, 0x89, 0x75, 0x28, 0x48, 0x8B, 0xCF, 0xE8, 0x64, 0xFB, 0xFF, 0xFF, 0x48, 0x85, 0xC0, 0x0F,
0x84, 0xC5, 0x04, 0x00, 0x00, 0x48, 0x89, 0x45, 0xD8, 0x48, 0x85, 0xDB, 0x0F, 0x85, 0xFE, 0x03,
0x00, 0x00, 0x8B, 0x48, 0x12, 0x4C, 0x8D, 0x40, 0x12, 0x81, 0xE1, 0xFF, 0xFF, 0xFF, 0x00, 0x81,
0xF9, 0x0F, 0x05, 0xC3, 0x00, 0x74, 0x17, 0x4C, 0x8D, 0x40, 0x08, 0x8B, 0x40, 0x08, 0x25, 0xFF,
0xFF, 0xFF, 0x00, 0x3D, 0x0F, 0x05, 0xC3, 0x00, 0x0F, 0x85, 0x8C, 0x04, 0x00, 0x00, 0x8B, 0x45,
0xEC, 0x48, 0x89, 0x44, 0x24, 0x40, 0x66, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0F, 0x31, 0x48, 0xC1, 0xE2, 0x20, 0x48, 0x0B, 0xC2, 0x48, 0x8B, 0xC8, 0x81, 0xE1, 0xFF, 0x07,
0x00, 0x00, 0x48, 0xC1, 0xE1, 0x04, 0x49, 0x03, 0xC8, 0x8B, 0x01, 0x25, 0xFF, 0xFF, 0xFF, 0x00,
0x3D, 0x0F, 0x05, 0xC3, 0x00, 0x75, 0xD9, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0F, 0x31, 0x48, 0xC1, 0xE2, 0x20, 0x48, 0x0B, 0xC2, 0x48, 0x8B, 0xD8, 0x81, 0xE3, 0xFF, 0x07,
0x00, 0x00, 0x48, 0xC1, 0xE3, 0x04, 0x49, 0x03, 0xD8, 0x8B, 0x13, 0x81, 0xE2, 0xFF, 0xFF, 0xFF,
0x00, 0x81, 0xFA, 0x0F, 0x05, 0xC3, 0x00, 0x75, 0xD7, 0x48, 0xF7, 0xD1, 0xC7, 0x44, 0x24, 0x28,
0x04, 0x00, 0x00, 0x00, 0x48, 0x89, 0x4C, 0x24, 0x38, 0x4C, 0x8D, 0x4C, 0x24, 0x30, 0x48, 0x8D,
0x4C, 0x24, 0x38, 0x48, 0xC7, 0x44, 0x24, 0x48, 0xFF, 0xFF, 0xFF, 0xFF, 0x45, 0x33, 0xC0, 0x48,
0xC7, 0x44, 0x24, 0x30, 0x00, 0x80, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x58, 0x4C, 0x89, 0x74,
0x24, 0x58, 0xC7, 0x44, 0x24, 0x20, 0x00, 0x30, 0x00, 0x00, 0xE8, 0x11, 0x05, 0x00, 0x00, 0x85,
0xC0, 0x0F, 0x88, 0x64, 0xFD, 0xFF, 0xFF, 0x48, 0x8B, 0x44, 0x24, 0x58, 0x48, 0x8D, 0xB8, 0x00,
0x10, 0x00, 0x00, 0x48, 0x89, 0x38, 0x4C, 0x8B, 0x44, 0x24, 0x58, 0x49, 0x81, 0xC0, 0x00, 0x20,
0x00, 0x00, 0x44, 0x89, 0x75, 0x68, 0x48, 0x81, 0x6C, 0x24, 0x30, 0x00, 0x20, 0x00, 0x00, 0x4C,
0x89, 0x44, 0x24, 0x60, 0x0F, 0x31, 0x48, 0xC1, 0xE2, 0x20, 0x48, 0xF7, 0xD3, 0x48, 0x0B, 0xD0,
0x48, 0x8D, 0x44, 0x24, 0x70, 0x48, 0x33, 0xD0, 0x48, 0x8D, 0x45, 0xE0, 0x48, 0x8B, 0xCA, 0x48,
0xC1, 0xE9, 0x20, 0x4C, 0x8B, 0xC9, 0x4C, 0x8B, 0xD1, 0x4C, 0x33, 0xCA, 0x41, 0xF7, 0xD2, 0x4C,
0x33, 0xC8, 0x41, 0x0F, 0xB7, 0xC9, 0x45, 0x33, 0xD1, 0x49, 0x8B, 0xC1, 0x48, 0xC1, 0xE8, 0x10,
0x66, 0x41, 0x33, 0xC1, 0x49, 0xB9, 0xC7, 0x44, 0x24, 0x04, 0xFF, 0xFF, 0xFF, 0xFF, 0x44, 0x0F,
0xB6, 0xD8, 0x48, 0x33, 0xC1, 0x0F, 0xB6, 0xC0, 0x48, 0x83, 0xC0, 0x20, 0x49, 0xC1, 0xE3, 0x04,
0x48, 0xC1, 0xE0, 0x04, 0x4D, 0x03, 0xD8, 0x4E, 0x8D, 0x04, 0x18, 0x0F, 0xB7, 0xC2, 0x66, 0xF7,
0xD0, 0x49, 0x89, 0x58, 0x08, 0x48, 0x33, 0xC1, 0x41, 0xC7, 0x40, 0x10, 0x50, 0x48, 0x8D, 0x05,
0x0F, 0xB6, 0xD0, 0x48, 0xB8, 0x4C, 0x87, 0x14, 0x24, 0x59, 0x50, 0x48, 0xB9, 0x49, 0x89, 0x00,
0x48, 0x83, 0xC2, 0x03, 0x41, 0xC6, 0x40, 0x28, 0xC3, 0x48, 0xC1, 0xE2, 0x04, 0x49, 0x03, 0xD0,
0x41, 0x0F, 0xB6, 0xCA, 0xC1, 0xE1, 0x04, 0x48, 0x03, 0xCA, 0x8D, 0x41, 0x30, 0x41, 0x2B, 0xC0,
0x83, 0xE8, 0x18, 0x41, 0x89, 0x40, 0x14, 0x48, 0x8B, 0xC2, 0x48, 0xC1, 0xE0, 0x20, 0x48, 0x0D,
0x48, 0xC7, 0x04, 0x24, 0x49, 0x89, 0x40, 0x18, 0x48, 0x8B, 0xC2, 0x49, 0x23, 0xC1, 0x48, 0x0D,
0xC7, 0x44, 0x24, 0x04, 0x49, 0x89, 0x40, 0x20, 0x48, 0xB8, 0x48, 0x8D, 0xA4, 0x24, 0x00, 0xFF,
0xFF, 0xFF, 0x48, 0x89, 0x41, 0x30, 0x48, 0xB8, 0x48, 0x8D, 0xA4, 0x24, 0x20, 0x02, 0x00, 0x00,
0x48, 0x89, 0x41, 0x38, 0x48, 0xB8, 0x48, 0x87, 0x04, 0x24, 0x48, 0x94, 0x48, 0x8B, 0x48, 0x89,
0x41, 0x40, 0x48, 0xB8, 0x68, 0x08, 0x48, 0x8B, 0x40, 0x00, 0x48, 0x83, 0x48, 0x89, 0x41, 0x48,
0x48, 0xB8, 0x50, 0x48, 0x8B, 0xC4, 0x48, 0x8D, 0xA4, 0x24, 0xC7, 0x41, 0x50, 0xC4, 0x10, 0xC3,
0xCC, 0x48, 0x89, 0x02, 0x48, 0xB8, 0x80, 0xF9, 0xFF, 0xFF, 0x48, 0x87, 0x2C, 0x24, 0x48, 0x89,
0x42, 0x08, 0x48, 0xB8, 0x48, 0x83, 0xEC, 0x08, 0x48, 0x89, 0x04, 0x24, 0x48, 0x89, 0x42, 0x10,
0x48, 0xB8, 0x48, 0x8D, 0xA4, 0x24, 0xE0, 0xFE, 0xFF, 0xFF, 0x48, 0x89, 0x42, 0x18, 0x48, 0xB8,
0xFF, 0x30, 0x89, 0x28, 0x48, 0x8D, 0x40, 0x08, 0x48, 0x89, 0x42, 0x20, 0x48, 0xB8, 0x0F, 0x10,
0x40, 0x30, 0x0F, 0x11, 0x44, 0x24, 0x48, 0x89, 0x42, 0x28, 0x48, 0xB8, 0x28, 0x0F, 0x10, 0x40,
0x40, 0x0F, 0x11, 0x44, 0x48, 0x89, 0x42, 0x30, 0x48, 0xB8, 0x24, 0x38, 0x0F, 0x10, 0x40, 0x50,
0x0F, 0x11, 0x48, 0x89, 0x42, 0x38, 0x48, 0xB8, 0x44, 0x24, 0x48, 0x0F, 0x10, 0x40, 0x60, 0x0F,
0x48, 0x89, 0x42, 0x40, 0x49, 0xB9, 0x44, 0x48, 0xF7, 0xD1, 0xFF, 0xE1, 0xCC, 0xCC, 0x49, 0x8D,
0x0B, 0x4C, 0x89, 0x4A, 0x50, 0x49, 0xF7, 0xD0, 0x48, 0xB8, 0x11, 0x44, 0x24, 0x58, 0x48, 0x87,
0x40, 0x00, 0x48, 0x89, 0x42, 0x48, 0x48, 0xB8, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0x49, 0x89, 0x43, 0x18, 0x48, 0xBA, 0x51, 0xB8, 0xFF, 0xFF, 0xFF, 0xFF, 0x48, 0xB9, 0x49, 0x89,
0x13, 0x4D, 0x89, 0x43, 0x08, 0x4D, 0x89, 0x4B, 0x10, 0x49, 0x89, 0x53, 0x20, 0x4D, 0x89, 0x43,
0x28, 0x4D, 0x89, 0x4B, 0x30, 0x49, 0x89, 0x43, 0x38, 0x49, 0x89, 0x53, 0x40, 0x4D, 0x89, 0x43,
0x48, 0x4D, 0x89, 0x4B, 0x50, 0x49, 0x89, 0x43, 0x58, 0x49, 0x89, 0x53, 0x60, 0x48, 0x8D, 0x54,
0x24, 0x60, 0x4D, 0x89, 0x43, 0x68, 0x4C, 0x8D, 0x44, 0x24, 0x30, 0x4D, 0x89, 0x4B, 0x70, 0x41,
0xB9, 0x20, 0x00, 0x00, 0x00, 0x49, 0x89, 0x43, 0x78, 0x8B, 0x45, 0xEC, 0x89, 0x41, 0x02, 0x8B,
0x45, 0x04, 0x48, 0x89, 0x4D, 0x88, 0x48, 0x83, 0xC1, 0x20, 0x89, 0x41, 0x02, 0x8B, 0x45, 0xFC,
0x48, 0x89, 0x4D, 0xB8, 0x48, 0x83, 0xC1, 0x20, 0x89, 0x41, 0x02, 0x8B, 0x45, 0xF8, 0x48, 0x89,
0x4D, 0xA8, 0x48, 0x83, 0xC1, 0x20, 0x89, 0x41, 0x02, 0x8B, 0x45, 0xFC, 0x48, 0x89, 0x44, 0x24,
0x40, 0x48, 0x8D, 0x45, 0x68, 0x48, 0x89, 0x4D, 0xA0, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x48, 0x89,
0x44, 0x24, 0x20, 0xE8, 0x78, 0x02, 0x00, 0x00, 0x85, 0xC0, 0x0F, 0x88, 0xCB, 0xFA, 0xFF, 0xFF,
0x0F, 0x28, 0x44, 0x24, 0x70, 0x48, 0x8D, 0x45, 0x68, 0x48, 0xC7, 0x44, 0x24, 0x30, 0x00, 0x20,
0x00, 0x00, 0x4C, 0x8D, 0x44, 0x24, 0x30, 0x0F, 0x11, 0x07, 0x48, 0x8D, 0x54, 0x24, 0x58, 0x41,
0xB9, 0x02, 0x00, 0x00, 0x00, 0x0F, 0x28, 0x4D, 0x80, 0x48, 0x8D, 0x4C, 0x24, 0x38, 0x0F, 0x11,
0x4F, 0x10, 0x48, 0x89, 0x44, 0x24, 0x20, 0x0F, 0x28, 0x45, 0x90, 0x0F, 0x11, 0x47, 0x20, 0x0F,
0x28, 0x4D, 0xA0, 0x0F, 0x11, 0x4F, 0x30, 0x0F, 0x28, 0x45, 0xB0, 0x0F, 0x11, 0x47, 0x40, 0x0F,
0x28, 0x4D, 0xC0, 0x0F, 0x11, 0x4F, 0x50, 0x0F, 0x28, 0x45, 0xD0, 0x0F, 0x11, 0x47, 0x60, 0xE8,
0x0C, 0x02, 0x00, 0x00, 0x85, 0xC0, 0x0F, 0x88, 0x5F, 0xFA, 0xFF, 0xFF, 0x48, 0x8B, 0x44, 0x24,
0x58, 0x48, 0xF7, 0xD0, 0x48, 0x89, 0x06, 0x33, 0xC0, 0xE9, 0x4D, 0xFA, 0xFF, 0xFF, 0xCC, 0xCC,
0xC7, 0x44, 0x24, 0x28, 0x04, 0x00, 0x00, 0x00, 0x4C, 0x8D, 0x4C, 0x24, 0x60, 0x4C, 0x89, 0x74,
0x24, 0x30, 0x48, 0x8D, 0x54, 0x24, 0x30, 0x48, 0xC7, 0x44, 0x24, 0x60, 0x00, 0x20, 0x00, 0x00,
0xC7, 0x44, 0x24, 0x20, 0x00, 0x30, 0x00, 0x00, 0x48, 0x83, 0xC9, 0xFF, 0x48, 0xFF, 0x55, 0x88,
0x85, 0xC0, 0x0F, 0x88, 0x13, 0xFA, 0xFF, 0xFF, 0x48, 0x8B, 0x4C, 0x24, 0x30, 0x4C, 0x8D, 0x44,
0x24, 0x60, 0x41, 0xB9, 0x02, 0x00, 0x00, 0x00, 0x48, 0x8D, 0x54, 0x24, 0x30, 0x48, 0x8D, 0x81,
0x00, 0x10, 0x00, 0x00, 0x48, 0x89, 0x01, 0x48, 0x83, 0xC9, 0xFF, 0x0F, 0x28, 0x44, 0x24, 0x70,
0x0F, 0x11, 0x00, 0x0F, 0x28, 0x4D, 0x80, 0x0F, 0x11, 0x48, 0x10, 0x0F, 0x28, 0x45, 0x90, 0x0F,
0x11, 0x40, 0x20, 0x0F, 0x28, 0x4D, 0xA0, 0x0F, 0x11, 0x48, 0x30, 0x0F, 0x28, 0x45, 0xB0, 0x0F,
0x11, 0x40, 0x40, 0x0F, 0x28, 0x4D, 0xC0, 0x0F, 0x11, 0x48, 0x50, 0x0F, 0x28, 0x45, 0xD0, 0x0F,
0x11, 0x40, 0x60, 0x48, 0x8D, 0x45, 0x68, 0x48, 0x89, 0x44, 0x24, 0x20, 0x48, 0xFF, 0x55, 0xA8,
0x85, 0xC0, 0x0F, 0x85, 0xA3, 0xF9, 0xFF, 0xFF, 0x48, 0x8B, 0x44, 0x24, 0x30, 0x48, 0xF7, 0xD0,
0x48, 0x89, 0x06, 0x33, 0xC0, 0xE9, 0x91, 0xF9, 0xFF, 0xFF, 0xB8, 0xDE, 0xC0, 0xAD, 0xDE, 0xE9,
0x87, 0xF9, 0xFF, 0xFF, 0xB8, 0x35, 0x01, 0x00, 0xC0, 0x48, 0x81, 0xC4, 0x30, 0x01, 0x00, 0x00,
0x5F, 0x5E, 0x5D, 0xC3,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//dec_str_start
0x80, 0xC2, 0xFF, 0x74, 0x17, 0x0F, 0xB6, 0xC2, 0x48, 0x8D, 0x04, 0xC1, 0x0F, 0x1F, 0x40, 0x00,
0x48, 0xF7, 0x10, 0x48, 0x8D, 0x40, 0xF8, 0x80, 0xC2, 0xFF, 0x75, 0xF4, 0x0F, 0xB6, 0xC2, 0x48,
0xF7, 0x14, 0xC1, 0x48, 0x8D, 0x0C, 0xC1,
0xC3,
//dec_str_end
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//paser_syscallnum_start
0x4C, 0x8B, 0xD2, 0x4C, 0x8B, 0xC1, 0x48, 0x85, 0xC9, 0x0F, 0x84, 0xB9, 0x00, 0x00, 0x00, 0x8B,
0x01, 0x3D, 0x4C, 0x8B, 0xD1, 0xB8, 0x75, 0x0B, 0x8B, 0x41, 0x04, 0x89, 0x02, 0xB8, 0x01, 0x00,
0x00, 0x00, 0xC3, 0x3C, 0xE9, 0x74, 0x18, 0xB9, 0xFF, 0x25, 0x00, 0x00, 0x66, 0x3B, 0xC1, 0x74,
0x0E, 0xB9, 0x48, 0xB8, 0x00, 0x00, 0x66, 0x3B, 0xC1, 0x0F, 0x85, 0x89, 0x00, 0x00, 0x00, 0xB8,
0x01, 0x00, 0x00, 0x00, 0xB9, 0x10, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00,
0x8B, 0xD1, 0x4D, 0x8B, 0xC8, 0x4C, 0x2B, 0xCA, 0x41, 0x81, 0x39, 0x4C, 0x8B, 0xD1, 0xB8, 0x74,
0x46, 0x42, 0x81, 0x3C, 0x02, 0x4C, 0x8B, 0xD1, 0xB8, 0x4E, 0x8D, 0x0C, 0x02, 0x74, 0x10, 0x83,
0xC1, 0x10, 0xFF, 0xC0, 0x83, 0xF8, 0x20, 0x76, 0xD7, 0xB8, 0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0x83,
0xC1, 0x04, 0x46, 0x8B, 0x04, 0x01, 0x41, 0x8B, 0xD0, 0x44, 0x2B, 0xC0, 0x8B, 0xC8, 0xD1, 0xE9,
0xB8, 0x01, 0x00, 0x00, 0x00, 0x2B, 0xD1, 0x41, 0x81, 0x79, 0x08, 0xF6, 0x04, 0x25, 0x08, 0x44,
0x0F, 0x44, 0xC2, 0x45, 0x89, 0x02, 0xC3, 0x8B, 0xD0, 0xD1, 0xEA, 0x41, 0x81, 0x79, 0x08, 0xF6,
0x04, 0x25, 0x08, 0x0F, 0x45, 0xD0, 0x83, 0xC1, 0xFC, 0x4C, 0x2B, 0xC1,
0xB8, 0x01, 0x00, 0x00, 0x00,
0x41, 0x03, 0x10,
0x41, 0x89, 0x12,
0xC3,
0x33, 0xC0,
0xC3,
//paser_syscallnum_end
0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//syscall_part
0x48, 0xFF, 0x71, 0x08, 0x4C, 0x8B, 0x51, 0x10, 0x48, 0x8B, 0x49, 0x00, 0x44, 0x48, 0x8D, 0x05,
0x6C, 0x00, 0x00, 0x00, 0x50, 0x48, 0x8B, 0xC4, 0x48, 0x8D, 0xA4, 0x24, 0x80, 0xF9, 0xFF, 0xFF,
0x48, 0x87, 0x2C, 0x24, 0x48, 0x83, 0xEC, 0x08, 0x48, 0x89, 0x04, 0x24, 0x48, 0x8D, 0xA4, 0x24,
0xE0, 0xFE, 0xFF, 0xFF, 0xFF, 0x30, 0x89, 0x28, 0x48, 0x8D, 0x40, 0x08, 0x0F, 0x10, 0x40, 0x30,
0x0F, 0x11, 0x44, 0x24, 0x28, 0x0F, 0x10, 0x40, 0x40, 0x0F, 0x11, 0x44, 0x24, 0x38, 0x0F, 0x10,
0x40, 0x50, 0x0F, 0x11, 0x44, 0x24, 0x48, 0x0F, 0x10, 0x40, 0x60, 0x0F, 0x11, 0x44, 0x24, 0x58,
0x48, 0x87, 0x40, 0x00, 0x44, 0x48, 0xF7, 0xD1, 0xFF, 0xE1, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0x48, 0x8D, 0xA4, 0x24, 0x00, 0xF0, 0xFF, 0xFF, 0x48, 0x8D, 0xA4, 0x24, 0x00, 0xF0, 0xFF, 0xFF,
0x48, 0x8D, 0xA4, 0x24, 0x20, 0x21, 0x00, 0x00, 0x48, 0x87, 0x04, 0x24, 0x48, 0x94,
0x48, 0x8B, 0x68, 0x08,
0x48, 0x8B, 0x40, 0x00,
0x48, 0x83, 0xC4, 0x10,
0xC3,
//
0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
//
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
};

#define shellcode_entryVA           (0x1D0)
#define HKSR_UISet_FuncVA           (0x220)
#define GI_UnHooked_UI_fVA          (0x240)
#define GI_hooked_Vfunc_VA          (0x2D0)
#define PowerSaveSet_FuncVA         (0x560)


#endif // SHELLCODE_HEADER_H